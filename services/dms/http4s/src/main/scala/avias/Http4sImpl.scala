package avias.dms.http4s
import org.http4s.Method._
import avias.dms.circe._
import avias.dms.models
import avias.common.http4s.ClientUtils._
class AmazondmsClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.dms.Amazondms[F] {
  private[this] final val ServiceType: String = "dms"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AmazonDMSv20160101")
  override def describeTableStatistics(input: avias.dms.models.DescribeTableStatisticsMessage): F[avias.dms.models.DescribeTableStatisticsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeTableStatisticsResponse, avias.dms.models.DescribeTableStatisticsMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTableStatistics", POST, "/", input)
  override def modifyEventSubscription(input: avias.dms.models.ModifyEventSubscriptionMessage): F[avias.dms.models.ModifyEventSubscriptionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.ModifyEventSubscriptionResponse, avias.dms.models.ModifyEventSubscriptionMessage](client, awsData, ServiceType, ServiceAndPrefix, "ModifyEventSubscription", POST, "/", input)
  override def describeReplicationInstances(input: avias.dms.models.DescribeReplicationInstancesMessage): F[avias.dms.models.DescribeReplicationInstancesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeReplicationInstancesResponse, avias.dms.models.DescribeReplicationInstancesMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeReplicationInstances", POST, "/", input)
  override def describeCertificates(input: avias.dms.models.DescribeCertificatesMessage): F[avias.dms.models.DescribeCertificatesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeCertificatesResponse, avias.dms.models.DescribeCertificatesMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeCertificates", POST, "/", input)
  override def deleteCertificate(input: avias.dms.models.DeleteCertificateMessage): F[avias.dms.models.DeleteCertificateResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DeleteCertificateResponse, avias.dms.models.DeleteCertificateMessage](client, awsData, ServiceType, ServiceAndPrefix, "DeleteCertificate", POST, "/", input)
  override def stopReplicationTask(input: avias.dms.models.StopReplicationTaskMessage): F[avias.dms.models.StopReplicationTaskResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.StopReplicationTaskResponse, avias.dms.models.StopReplicationTaskMessage](client, awsData, ServiceType, ServiceAndPrefix, "StopReplicationTask", POST, "/", input)
  override def describeEndpointTypes(input: avias.dms.models.DescribeEndpointTypesMessage): F[avias.dms.models.DescribeEndpointTypesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeEndpointTypesResponse, avias.dms.models.DescribeEndpointTypesMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEndpointTypes", POST, "/", input)
  override def startReplicationTaskAssessment(input: avias.dms.models.StartReplicationTaskAssessmentMessage): F[avias.dms.models.StartReplicationTaskAssessmentResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.StartReplicationTaskAssessmentResponse, avias.dms.models.StartReplicationTaskAssessmentMessage](client, awsData, ServiceType, ServiceAndPrefix, "StartReplicationTaskAssessment", POST, "/", input)
  override def modifyReplicationTask(input: avias.dms.models.ModifyReplicationTaskMessage): F[avias.dms.models.ModifyReplicationTaskResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.ModifyReplicationTaskResponse, avias.dms.models.ModifyReplicationTaskMessage](client, awsData, ServiceType, ServiceAndPrefix, "ModifyReplicationTask", POST, "/", input)
  override def deleteReplicationTask(input: avias.dms.models.DeleteReplicationTaskMessage): F[avias.dms.models.DeleteReplicationTaskResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DeleteReplicationTaskResponse, avias.dms.models.DeleteReplicationTaskMessage](client, awsData, ServiceType, ServiceAndPrefix, "DeleteReplicationTask", POST, "/", input)
  override def startReplicationTask(input: avias.dms.models.StartReplicationTaskMessage): F[avias.dms.models.StartReplicationTaskResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.StartReplicationTaskResponse, avias.dms.models.StartReplicationTaskMessage](client, awsData, ServiceType, ServiceAndPrefix, "StartReplicationTask", POST, "/", input)
  override def createReplicationInstance(input: avias.dms.models.CreateReplicationInstanceMessage): F[avias.dms.models.CreateReplicationInstanceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.CreateReplicationInstanceResponse, avias.dms.models.CreateReplicationInstanceMessage](client, awsData, ServiceType, ServiceAndPrefix, "CreateReplicationInstance", POST, "/", input)
  override def describeEventCategories(input: avias.dms.models.DescribeEventCategoriesMessage): F[avias.dms.models.DescribeEventCategoriesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeEventCategoriesResponse, avias.dms.models.DescribeEventCategoriesMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEventCategories", POST, "/", input)
  override def deleteEventSubscription(input: avias.dms.models.DeleteEventSubscriptionMessage): F[avias.dms.models.DeleteEventSubscriptionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DeleteEventSubscriptionResponse, avias.dms.models.DeleteEventSubscriptionMessage](client, awsData, ServiceType, ServiceAndPrefix, "DeleteEventSubscription", POST, "/", input)
  override def testConnection(input: avias.dms.models.TestConnectionMessage): F[avias.dms.models.TestConnectionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.TestConnectionResponse, avias.dms.models.TestConnectionMessage](client, awsData, ServiceType, ServiceAndPrefix, "TestConnection", POST, "/", input)
  override def describeConnections(input: avias.dms.models.DescribeConnectionsMessage): F[avias.dms.models.DescribeConnectionsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeConnectionsResponse, avias.dms.models.DescribeConnectionsMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeConnections", POST, "/", input)
  override def listTagsForResource(input: avias.dms.models.ListTagsForResourceMessage): F[avias.dms.models.ListTagsForResourceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.ListTagsForResourceResponse, avias.dms.models.ListTagsForResourceMessage](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForResource", POST, "/", input)
  override def createEventSubscription(input: avias.dms.models.CreateEventSubscriptionMessage): F[avias.dms.models.CreateEventSubscriptionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.CreateEventSubscriptionResponse, avias.dms.models.CreateEventSubscriptionMessage](client, awsData, ServiceType, ServiceAndPrefix, "CreateEventSubscription", POST, "/", input)
  override def describeOrderableReplicationInstances(input: avias.dms.models.DescribeOrderableReplicationInstancesMessage): F[avias.dms.models.DescribeOrderableReplicationInstancesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeOrderableReplicationInstancesResponse, avias.dms.models.DescribeOrderableReplicationInstancesMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeOrderableReplicationInstances", POST, "/", input)
  override def describeReplicationTasks(input: avias.dms.models.DescribeReplicationTasksMessage): F[avias.dms.models.DescribeReplicationTasksResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeReplicationTasksResponse, avias.dms.models.DescribeReplicationTasksMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeReplicationTasks", POST, "/", input)
  override def modifyReplicationSubnetGroup(input: avias.dms.models.ModifyReplicationSubnetGroupMessage): F[avias.dms.models.ModifyReplicationSubnetGroupResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.ModifyReplicationSubnetGroupResponse, avias.dms.models.ModifyReplicationSubnetGroupMessage](client, awsData, ServiceType, ServiceAndPrefix, "ModifyReplicationSubnetGroup", POST, "/", input)
  override def describeReplicationTaskAssessmentResults(input: avias.dms.models.DescribeReplicationTaskAssessmentResultsMessage): F[avias.dms.models.DescribeReplicationTaskAssessmentResultsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeReplicationTaskAssessmentResultsResponse, avias.dms.models.DescribeReplicationTaskAssessmentResultsMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeReplicationTaskAssessmentResults", POST, "/", input)
  override def describeReplicationSubnetGroups(input: avias.dms.models.DescribeReplicationSubnetGroupsMessage): F[avias.dms.models.DescribeReplicationSubnetGroupsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeReplicationSubnetGroupsResponse, avias.dms.models.DescribeReplicationSubnetGroupsMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeReplicationSubnetGroups", POST, "/", input)
  override def deleteReplicationInstance(input: avias.dms.models.DeleteReplicationInstanceMessage): F[avias.dms.models.DeleteReplicationInstanceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DeleteReplicationInstanceResponse, avias.dms.models.DeleteReplicationInstanceMessage](client, awsData, ServiceType, ServiceAndPrefix, "DeleteReplicationInstance", POST, "/", input)
  override def createReplicationSubnetGroup(input: avias.dms.models.CreateReplicationSubnetGroupMessage): F[avias.dms.models.CreateReplicationSubnetGroupResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.CreateReplicationSubnetGroupResponse, avias.dms.models.CreateReplicationSubnetGroupMessage](client, awsData, ServiceType, ServiceAndPrefix, "CreateReplicationSubnetGroup", POST, "/", input)
  override def createReplicationTask(input: avias.dms.models.CreateReplicationTaskMessage): F[avias.dms.models.CreateReplicationTaskResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.CreateReplicationTaskResponse, avias.dms.models.CreateReplicationTaskMessage](client, awsData, ServiceType, ServiceAndPrefix, "CreateReplicationTask", POST, "/", input)
  override def addTagsToResource(input: avias.dms.models.AddTagsToResourceMessage): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.dms.models.AddTagsToResourceMessage](client, awsData, ServiceType, ServiceAndPrefix, "AddTagsToResource", POST, "/", input)
  override def describeEndpoints(input: avias.dms.models.DescribeEndpointsMessage): F[avias.dms.models.DescribeEndpointsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeEndpointsResponse, avias.dms.models.DescribeEndpointsMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEndpoints", POST, "/", input)
  override def removeTagsFromResource(input: avias.dms.models.RemoveTagsFromResourceMessage): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.dms.models.RemoveTagsFromResourceMessage](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTagsFromResource", POST, "/", input)
  override def importCertificate(input: avias.dms.models.ImportCertificateMessage): F[avias.dms.models.ImportCertificateResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.ImportCertificateResponse, avias.dms.models.ImportCertificateMessage](client, awsData, ServiceType, ServiceAndPrefix, "ImportCertificate", POST, "/", input)
  override def modifyEndpoint(input: avias.dms.models.ModifyEndpointMessage): F[avias.dms.models.ModifyEndpointResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.ModifyEndpointResponse, avias.dms.models.ModifyEndpointMessage](client, awsData, ServiceType, ServiceAndPrefix, "ModifyEndpoint", POST, "/", input)
  override def describeEventSubscriptions(input: avias.dms.models.DescribeEventSubscriptionsMessage): F[avias.dms.models.DescribeEventSubscriptionsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeEventSubscriptionsResponse, avias.dms.models.DescribeEventSubscriptionsMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEventSubscriptions", POST, "/", input)
  override def deleteReplicationSubnetGroup(input: avias.dms.models.DeleteReplicationSubnetGroupMessage): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.dms.models.DeleteReplicationSubnetGroupMessage](client, awsData, ServiceType, ServiceAndPrefix, "DeleteReplicationSubnetGroup", POST, "/", input)
  override def describeEvents(input: avias.dms.models.DescribeEventsMessage): F[avias.dms.models.DescribeEventsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeEventsResponse, avias.dms.models.DescribeEventsMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEvents", POST, "/", input)
  override def describeRefreshSchemasStatus(input: avias.dms.models.DescribeRefreshSchemasStatusMessage): F[avias.dms.models.DescribeRefreshSchemasStatusResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeRefreshSchemasStatusResponse, avias.dms.models.DescribeRefreshSchemasStatusMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeRefreshSchemasStatus", POST, "/", input)
  override def describeAccountAttributes: F[avias.dms.models.DescribeAccountAttributesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeAccountAttributesResponse, scala.Unit](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAccountAttributes", POST, "/", ())
  override def refreshSchemas(input: avias.dms.models.RefreshSchemasMessage): F[avias.dms.models.RefreshSchemasResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.RefreshSchemasResponse, avias.dms.models.RefreshSchemasMessage](client, awsData, ServiceType, ServiceAndPrefix, "RefreshSchemas", POST, "/", input)
  override def reloadTables(input: avias.dms.models.ReloadTablesMessage): F[avias.dms.models.ReloadTablesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.ReloadTablesResponse, avias.dms.models.ReloadTablesMessage](client, awsData, ServiceType, ServiceAndPrefix, "ReloadTables", POST, "/", input)
  override def deleteEndpoint(input: avias.dms.models.DeleteEndpointMessage): F[avias.dms.models.DeleteEndpointResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DeleteEndpointResponse, avias.dms.models.DeleteEndpointMessage](client, awsData, ServiceType, ServiceAndPrefix, "DeleteEndpoint", POST, "/", input)
  override def createEndpoint(input: avias.dms.models.CreateEndpointMessage): F[avias.dms.models.CreateEndpointResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.CreateEndpointResponse, avias.dms.models.CreateEndpointMessage](client, awsData, ServiceType, ServiceAndPrefix, "CreateEndpoint", POST, "/", input)
  override def modifyReplicationInstance(input: avias.dms.models.ModifyReplicationInstanceMessage): F[avias.dms.models.ModifyReplicationInstanceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.ModifyReplicationInstanceResponse, avias.dms.models.ModifyReplicationInstanceMessage](client, awsData, ServiceType, ServiceAndPrefix, "ModifyReplicationInstance", POST, "/", input)
  override def describeSchemas(input: avias.dms.models.DescribeSchemasMessage): F[avias.dms.models.DescribeSchemasResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.dms.models.DescribeSchemasResponse, avias.dms.models.DescribeSchemasMessage](client, awsData, ServiceType, ServiceAndPrefix, "DescribeSchemas", POST, "/", input)
}