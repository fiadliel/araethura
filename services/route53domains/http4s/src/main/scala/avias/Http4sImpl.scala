package avias.route53domains.http4s
import org.http4s.Method._
import avias.route53domains.circe._
import avias.route53domains.models
import avias.common.http4s.ClientUtils._
class Amazonroute53domainsClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.route53domains.Amazonroute53domains[F] {
  private[this] final val ServiceType: String = "route53domains"
  private[this] final val ServiceAndPrefix: Option[String] = Some("Route53Domains_v20140515")
  override def updateDomainContact(input: avias.route53domains.models.UpdateDomainContactRequest): F[avias.route53domains.models.UpdateDomainContactResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.UpdateDomainContactResponse, avias.route53domains.models.UpdateDomainContactRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDomainContact", POST, "/", input)
  override def updateTagsForDomain(input: avias.route53domains.models.UpdateTagsForDomainRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.route53domains.models.UpdateTagsForDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateTagsForDomain", POST, "/", input)
  override def listOperations(input: avias.route53domains.models.ListOperationsRequest): F[avias.route53domains.models.ListOperationsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.ListOperationsResponse, avias.route53domains.models.ListOperationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListOperations", POST, "/", input)
  override def disableDomainTransferLock(input: avias.route53domains.models.DisableDomainTransferLockRequest): F[avias.route53domains.models.DisableDomainTransferLockResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.DisableDomainTransferLockResponse, avias.route53domains.models.DisableDomainTransferLockRequest](client, awsData, ServiceType, ServiceAndPrefix, "DisableDomainTransferLock", POST, "/", input)
  override def updateDomainContactPrivacy(input: avias.route53domains.models.UpdateDomainContactPrivacyRequest): F[avias.route53domains.models.UpdateDomainContactPrivacyResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.UpdateDomainContactPrivacyResponse, avias.route53domains.models.UpdateDomainContactPrivacyRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDomainContactPrivacy", POST, "/", input)
  override def transferDomain(input: avias.route53domains.models.TransferDomainRequest): F[avias.route53domains.models.TransferDomainResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.TransferDomainResponse, avias.route53domains.models.TransferDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "TransferDomain", POST, "/", input)
  override def getDomainDetail(input: avias.route53domains.models.GetDomainDetailRequest): F[avias.route53domains.models.GetDomainDetailResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.GetDomainDetailResponse, avias.route53domains.models.GetDomainDetailRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDomainDetail", POST, "/", input)
  override def retrieveDomainAuthCode(input: avias.route53domains.models.RetrieveDomainAuthCodeRequest): F[avias.route53domains.models.RetrieveDomainAuthCodeResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.RetrieveDomainAuthCodeResponse, avias.route53domains.models.RetrieveDomainAuthCodeRequest](client, awsData, ServiceType, ServiceAndPrefix, "RetrieveDomainAuthCode", POST, "/", input)
  override def listTagsForDomain(input: avias.route53domains.models.ListTagsForDomainRequest): F[avias.route53domains.models.ListTagsForDomainResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.ListTagsForDomainResponse, avias.route53domains.models.ListTagsForDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForDomain", POST, "/", input)
  override def resendContactReachabilityEmail(input: avias.route53domains.models.ResendContactReachabilityEmailRequest): F[avias.route53domains.models.ResendContactReachabilityEmailResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.ResendContactReachabilityEmailResponse, avias.route53domains.models.ResendContactReachabilityEmailRequest](client, awsData, ServiceType, ServiceAndPrefix, "ResendContactReachabilityEmail", POST, "/", input)
  override def checkDomainAvailability(input: avias.route53domains.models.CheckDomainAvailabilityRequest): F[avias.route53domains.models.CheckDomainAvailabilityResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.CheckDomainAvailabilityResponse, avias.route53domains.models.CheckDomainAvailabilityRequest](client, awsData, ServiceType, ServiceAndPrefix, "CheckDomainAvailability", POST, "/", input)
  override def getDomainSuggestions(input: avias.route53domains.models.GetDomainSuggestionsRequest): F[avias.route53domains.models.GetDomainSuggestionsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.GetDomainSuggestionsResponse, avias.route53domains.models.GetDomainSuggestionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDomainSuggestions", POST, "/", input)
  override def getOperationDetail(input: avias.route53domains.models.GetOperationDetailRequest): F[avias.route53domains.models.GetOperationDetailResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.GetOperationDetailResponse, avias.route53domains.models.GetOperationDetailRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetOperationDetail", POST, "/", input)
  override def viewBilling(input: avias.route53domains.models.ViewBillingRequest): F[avias.route53domains.models.ViewBillingResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.ViewBillingResponse, avias.route53domains.models.ViewBillingRequest](client, awsData, ServiceType, ServiceAndPrefix, "ViewBilling", POST, "/", input)
  override def renewDomain(input: avias.route53domains.models.RenewDomainRequest): F[avias.route53domains.models.RenewDomainResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.RenewDomainResponse, avias.route53domains.models.RenewDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "RenewDomain", POST, "/", input)
  override def checkDomainTransferability(input: avias.route53domains.models.CheckDomainTransferabilityRequest): F[avias.route53domains.models.CheckDomainTransferabilityResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.CheckDomainTransferabilityResponse, avias.route53domains.models.CheckDomainTransferabilityRequest](client, awsData, ServiceType, ServiceAndPrefix, "CheckDomainTransferability", POST, "/", input)
  override def deleteTagsForDomain(input: avias.route53domains.models.DeleteTagsForDomainRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.route53domains.models.DeleteTagsForDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteTagsForDomain", POST, "/", input)
  override def disableDomainAutoRenew(input: avias.route53domains.models.DisableDomainAutoRenewRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.route53domains.models.DisableDomainAutoRenewRequest](client, awsData, ServiceType, ServiceAndPrefix, "DisableDomainAutoRenew", POST, "/", input)
  override def enableDomainAutoRenew(input: avias.route53domains.models.EnableDomainAutoRenewRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.route53domains.models.EnableDomainAutoRenewRequest](client, awsData, ServiceType, ServiceAndPrefix, "EnableDomainAutoRenew", POST, "/", input)
  override def registerDomain(input: avias.route53domains.models.RegisterDomainRequest): F[avias.route53domains.models.RegisterDomainResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.RegisterDomainResponse, avias.route53domains.models.RegisterDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterDomain", POST, "/", input)
  override def enableDomainTransferLock(input: avias.route53domains.models.EnableDomainTransferLockRequest): F[avias.route53domains.models.EnableDomainTransferLockResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.EnableDomainTransferLockResponse, avias.route53domains.models.EnableDomainTransferLockRequest](client, awsData, ServiceType, ServiceAndPrefix, "EnableDomainTransferLock", POST, "/", input)
  override def getContactReachabilityStatus(input: avias.route53domains.models.GetContactReachabilityStatusRequest): F[avias.route53domains.models.GetContactReachabilityStatusResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.GetContactReachabilityStatusResponse, avias.route53domains.models.GetContactReachabilityStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetContactReachabilityStatus", POST, "/", input)
  override def listDomains(input: avias.route53domains.models.ListDomainsRequest): F[avias.route53domains.models.ListDomainsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.ListDomainsResponse, avias.route53domains.models.ListDomainsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListDomains", POST, "/", input)
  override def updateDomainNameservers(input: avias.route53domains.models.UpdateDomainNameserversRequest): F[avias.route53domains.models.UpdateDomainNameserversResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.route53domains.models.UpdateDomainNameserversResponse, avias.route53domains.models.UpdateDomainNameserversRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDomainNameservers", POST, "/", input)
}