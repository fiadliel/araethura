package avias.machinelearning.http4s
import org.http4s.Method._
import avias.machinelearning.circe._
import avias.machinelearning.models
import avias.common.http4s.ClientUtils._
class AmazonmachinelearningClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.machinelearning.Amazonmachinelearning[F] {
  private[this] final val ServiceType: String = "machinelearning"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AmazonML_20141212")
  override def describeTags(input: avias.machinelearning.models.DescribeTagsInput): F[avias.machinelearning.models.DescribeTagsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DescribeTagsOutput, avias.machinelearning.models.DescribeTagsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTags", POST, "/", input)
  override def createEvaluation(input: avias.machinelearning.models.CreateEvaluationInput): F[avias.machinelearning.models.CreateEvaluationOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.CreateEvaluationOutput, avias.machinelearning.models.CreateEvaluationInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateEvaluation", POST, "/", input)
  override def createDataSourceFromRedshift(input: avias.machinelearning.models.CreateDataSourceFromRedshiftInput): F[avias.machinelearning.models.CreateDataSourceFromRedshiftOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.CreateDataSourceFromRedshiftOutput, avias.machinelearning.models.CreateDataSourceFromRedshiftInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateDataSourceFromRedshift", POST, "/", input)
  override def describeBatchPredictions(input: avias.machinelearning.models.DescribeBatchPredictionsInput): F[avias.machinelearning.models.DescribeBatchPredictionsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DescribeBatchPredictionsOutput, avias.machinelearning.models.DescribeBatchPredictionsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeBatchPredictions", POST, "/", input)
  override def createDataSourceFromRDS(input: avias.machinelearning.models.CreateDataSourceFromRDSInput): F[avias.machinelearning.models.CreateDataSourceFromRDSOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.CreateDataSourceFromRDSOutput, avias.machinelearning.models.CreateDataSourceFromRDSInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateDataSourceFromRDS", POST, "/", input)
  override def createBatchPrediction(input: avias.machinelearning.models.CreateBatchPredictionInput): F[avias.machinelearning.models.CreateBatchPredictionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.CreateBatchPredictionOutput, avias.machinelearning.models.CreateBatchPredictionInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateBatchPrediction", POST, "/", input)
  override def addTags(input: avias.machinelearning.models.AddTagsInput): F[avias.machinelearning.models.AddTagsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.AddTagsOutput, avias.machinelearning.models.AddTagsInput](client, awsData, ServiceType, ServiceAndPrefix, "AddTags", POST, "/", input)
  override def updateDataSource(input: avias.machinelearning.models.UpdateDataSourceInput): F[avias.machinelearning.models.UpdateDataSourceOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.UpdateDataSourceOutput, avias.machinelearning.models.UpdateDataSourceInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDataSource", POST, "/", input)
  override def deleteMLModel(input: avias.machinelearning.models.DeleteMLModelInput): F[avias.machinelearning.models.DeleteMLModelOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DeleteMLModelOutput, avias.machinelearning.models.DeleteMLModelInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteMLModel", POST, "/", input)
  override def deleteEvaluation(input: avias.machinelearning.models.DeleteEvaluationInput): F[avias.machinelearning.models.DeleteEvaluationOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DeleteEvaluationOutput, avias.machinelearning.models.DeleteEvaluationInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteEvaluation", POST, "/", input)
  override def describeEvaluations(input: avias.machinelearning.models.DescribeEvaluationsInput): F[avias.machinelearning.models.DescribeEvaluationsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DescribeEvaluationsOutput, avias.machinelearning.models.DescribeEvaluationsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEvaluations", POST, "/", input)
  override def predict(input: avias.machinelearning.models.PredictInput): F[avias.machinelearning.models.PredictOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.PredictOutput, avias.machinelearning.models.PredictInput](client, awsData, ServiceType, ServiceAndPrefix, "Predict", POST, "/", input)
  override def describeDataSources(input: avias.machinelearning.models.DescribeDataSourcesInput): F[avias.machinelearning.models.DescribeDataSourcesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DescribeDataSourcesOutput, avias.machinelearning.models.DescribeDataSourcesInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDataSources", POST, "/", input)
  override def createDataSourceFromS3(input: avias.machinelearning.models.CreateDataSourceFromS3Input): F[avias.machinelearning.models.CreateDataSourceFromS3Output] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.CreateDataSourceFromS3Output, avias.machinelearning.models.CreateDataSourceFromS3Input](client, awsData, ServiceType, ServiceAndPrefix, "CreateDataSourceFromS3", POST, "/", input)
  override def deleteDataSource(input: avias.machinelearning.models.DeleteDataSourceInput): F[avias.machinelearning.models.DeleteDataSourceOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DeleteDataSourceOutput, avias.machinelearning.models.DeleteDataSourceInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDataSource", POST, "/", input)
  override def getBatchPrediction(input: avias.machinelearning.models.GetBatchPredictionInput): F[avias.machinelearning.models.GetBatchPredictionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.GetBatchPredictionOutput, avias.machinelearning.models.GetBatchPredictionInput](client, awsData, ServiceType, ServiceAndPrefix, "GetBatchPrediction", POST, "/", input)
  override def deleteRealtimeEndpoint(input: avias.machinelearning.models.DeleteRealtimeEndpointInput): F[avias.machinelearning.models.DeleteRealtimeEndpointOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DeleteRealtimeEndpointOutput, avias.machinelearning.models.DeleteRealtimeEndpointInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteRealtimeEndpoint", POST, "/", input)
  override def describeMLModels(input: avias.machinelearning.models.DescribeMLModelsInput): F[avias.machinelearning.models.DescribeMLModelsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DescribeMLModelsOutput, avias.machinelearning.models.DescribeMLModelsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMLModels", POST, "/", input)
  override def deleteBatchPrediction(input: avias.machinelearning.models.DeleteBatchPredictionInput): F[avias.machinelearning.models.DeleteBatchPredictionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DeleteBatchPredictionOutput, avias.machinelearning.models.DeleteBatchPredictionInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteBatchPrediction", POST, "/", input)
  override def createMLModel(input: avias.machinelearning.models.CreateMLModelInput): F[avias.machinelearning.models.CreateMLModelOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.CreateMLModelOutput, avias.machinelearning.models.CreateMLModelInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateMLModel", POST, "/", input)
  override def updateBatchPrediction(input: avias.machinelearning.models.UpdateBatchPredictionInput): F[avias.machinelearning.models.UpdateBatchPredictionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.UpdateBatchPredictionOutput, avias.machinelearning.models.UpdateBatchPredictionInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateBatchPrediction", POST, "/", input)
  override def getMLModel(input: avias.machinelearning.models.GetMLModelInput): F[avias.machinelearning.models.GetMLModelOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.GetMLModelOutput, avias.machinelearning.models.GetMLModelInput](client, awsData, ServiceType, ServiceAndPrefix, "GetMLModel", POST, "/", input)
  override def updateMLModel(input: avias.machinelearning.models.UpdateMLModelInput): F[avias.machinelearning.models.UpdateMLModelOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.UpdateMLModelOutput, avias.machinelearning.models.UpdateMLModelInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateMLModel", POST, "/", input)
  override def getEvaluation(input: avias.machinelearning.models.GetEvaluationInput): F[avias.machinelearning.models.GetEvaluationOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.GetEvaluationOutput, avias.machinelearning.models.GetEvaluationInput](client, awsData, ServiceType, ServiceAndPrefix, "GetEvaluation", POST, "/", input)
  override def createRealtimeEndpoint(input: avias.machinelearning.models.CreateRealtimeEndpointInput): F[avias.machinelearning.models.CreateRealtimeEndpointOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.CreateRealtimeEndpointOutput, avias.machinelearning.models.CreateRealtimeEndpointInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateRealtimeEndpoint", POST, "/", input)
  override def updateEvaluation(input: avias.machinelearning.models.UpdateEvaluationInput): F[avias.machinelearning.models.UpdateEvaluationOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.UpdateEvaluationOutput, avias.machinelearning.models.UpdateEvaluationInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateEvaluation", POST, "/", input)
  override def deleteTags(input: avias.machinelearning.models.DeleteTagsInput): F[avias.machinelearning.models.DeleteTagsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.DeleteTagsOutput, avias.machinelearning.models.DeleteTagsInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteTags", POST, "/", input)
  override def getDataSource(input: avias.machinelearning.models.GetDataSourceInput): F[avias.machinelearning.models.GetDataSourceOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.machinelearning.models.GetDataSourceOutput, avias.machinelearning.models.GetDataSourceInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDataSource", POST, "/", input)
}