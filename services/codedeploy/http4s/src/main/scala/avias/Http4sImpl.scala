package avias.codedeploy.http4s
import org.http4s.Method._
import avias.codedeploy.circe._
import avias.codedeploy.models
import avias.common.http4s.ClientUtils._
class AmazoncodedeployClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.codedeploy.Amazoncodedeploy[F] {
  private[this] final val ServiceType: String = "codedeploy"
  private[this] final val ServiceAndPrefix: Option[String] = Some("CodeDeploy_20141006")
  override def deleteDeploymentConfig(input: avias.codedeploy.models.DeleteDeploymentConfigInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codedeploy.models.DeleteDeploymentConfigInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDeploymentConfig", POST, "/", input)
  override def batchGetDeploymentInstances(input: avias.codedeploy.models.BatchGetDeploymentInstancesInput): F[avias.codedeploy.models.BatchGetDeploymentInstancesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.BatchGetDeploymentInstancesOutput, avias.codedeploy.models.BatchGetDeploymentInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetDeploymentInstances", POST, "/", input)
  override def deleteApplication(input: avias.codedeploy.models.DeleteApplicationInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codedeploy.models.DeleteApplicationInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteApplication", POST, "/", input)
  override def batchGetApplicationRevisions(input: avias.codedeploy.models.BatchGetApplicationRevisionsInput): F[avias.codedeploy.models.BatchGetApplicationRevisionsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.BatchGetApplicationRevisionsOutput, avias.codedeploy.models.BatchGetApplicationRevisionsInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetApplicationRevisions", POST, "/", input)
  override def createDeploymentGroup(input: avias.codedeploy.models.CreateDeploymentGroupInput): F[avias.codedeploy.models.CreateDeploymentGroupOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.CreateDeploymentGroupOutput, avias.codedeploy.models.CreateDeploymentGroupInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateDeploymentGroup", POST, "/", input)
  override def listDeploymentInstances(input: avias.codedeploy.models.ListDeploymentInstancesInput): F[avias.codedeploy.models.ListDeploymentInstancesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.ListDeploymentInstancesOutput, avias.codedeploy.models.ListDeploymentInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListDeploymentInstances", POST, "/", input)
  override def stopDeployment(input: avias.codedeploy.models.StopDeploymentInput): F[avias.codedeploy.models.StopDeploymentOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.StopDeploymentOutput, avias.codedeploy.models.StopDeploymentInput](client, awsData, ServiceType, ServiceAndPrefix, "StopDeployment", POST, "/", input)
  override def registerOnPremisesInstance(input: avias.codedeploy.models.RegisterOnPremisesInstanceInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codedeploy.models.RegisterOnPremisesInstanceInput](client, awsData, ServiceType, ServiceAndPrefix, "RegisterOnPremisesInstance", POST, "/", input)
  override def listGitHubAccountTokenNames(input: avias.codedeploy.models.ListGitHubAccountTokenNamesInput): F[avias.codedeploy.models.ListGitHubAccountTokenNamesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.ListGitHubAccountTokenNamesOutput, avias.codedeploy.models.ListGitHubAccountTokenNamesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListGitHubAccountTokenNames", POST, "/", input)
  override def getDeploymentInstance(input: avias.codedeploy.models.GetDeploymentInstanceInput): F[avias.codedeploy.models.GetDeploymentInstanceOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.GetDeploymentInstanceOutput, avias.codedeploy.models.GetDeploymentInstanceInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDeploymentInstance", POST, "/", input)
  override def updateDeploymentGroup(input: avias.codedeploy.models.UpdateDeploymentGroupInput): F[avias.codedeploy.models.UpdateDeploymentGroupOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.UpdateDeploymentGroupOutput, avias.codedeploy.models.UpdateDeploymentGroupInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDeploymentGroup", POST, "/", input)
  override def listDeployments(input: avias.codedeploy.models.ListDeploymentsInput): F[avias.codedeploy.models.ListDeploymentsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.ListDeploymentsOutput, avias.codedeploy.models.ListDeploymentsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListDeployments", POST, "/", input)
  override def createDeployment(input: avias.codedeploy.models.CreateDeploymentInput): F[avias.codedeploy.models.CreateDeploymentOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.CreateDeploymentOutput, avias.codedeploy.models.CreateDeploymentInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateDeployment", POST, "/", input)
  override def removeTagsFromOnPremisesInstances(input: avias.codedeploy.models.RemoveTagsFromOnPremisesInstancesInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codedeploy.models.RemoveTagsFromOnPremisesInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTagsFromOnPremisesInstances", POST, "/", input)
  override def deleteDeploymentGroup(input: avias.codedeploy.models.DeleteDeploymentGroupInput): F[avias.codedeploy.models.DeleteDeploymentGroupOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.DeleteDeploymentGroupOutput, avias.codedeploy.models.DeleteDeploymentGroupInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDeploymentGroup", POST, "/", input)
  override def addTagsToOnPremisesInstances(input: avias.codedeploy.models.AddTagsToOnPremisesInstancesInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codedeploy.models.AddTagsToOnPremisesInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "AddTagsToOnPremisesInstances", POST, "/", input)
  override def createDeploymentConfig(input: avias.codedeploy.models.CreateDeploymentConfigInput): F[avias.codedeploy.models.CreateDeploymentConfigOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.CreateDeploymentConfigOutput, avias.codedeploy.models.CreateDeploymentConfigInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateDeploymentConfig", POST, "/", input)
  override def getDeployment(input: avias.codedeploy.models.GetDeploymentInput): F[avias.codedeploy.models.GetDeploymentOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.GetDeploymentOutput, avias.codedeploy.models.GetDeploymentInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDeployment", POST, "/", input)
  override def skipWaitTimeForInstanceTermination(input: avias.codedeploy.models.SkipWaitTimeForInstanceTerminationInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codedeploy.models.SkipWaitTimeForInstanceTerminationInput](client, awsData, ServiceType, ServiceAndPrefix, "SkipWaitTimeForInstanceTermination", POST, "/", input)
  override def updateApplication(input: avias.codedeploy.models.UpdateApplicationInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codedeploy.models.UpdateApplicationInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateApplication", POST, "/", input)
  override def getDeploymentConfig(input: avias.codedeploy.models.GetDeploymentConfigInput): F[avias.codedeploy.models.GetDeploymentConfigOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.GetDeploymentConfigOutput, avias.codedeploy.models.GetDeploymentConfigInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDeploymentConfig", POST, "/", input)
  override def listDeploymentConfigs(input: avias.codedeploy.models.ListDeploymentConfigsInput): F[avias.codedeploy.models.ListDeploymentConfigsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.ListDeploymentConfigsOutput, avias.codedeploy.models.ListDeploymentConfigsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListDeploymentConfigs", POST, "/", input)
  override def continueDeployment(input: avias.codedeploy.models.ContinueDeploymentInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codedeploy.models.ContinueDeploymentInput](client, awsData, ServiceType, ServiceAndPrefix, "ContinueDeployment", POST, "/", input)
  override def listOnPremisesInstances(input: avias.codedeploy.models.ListOnPremisesInstancesInput): F[avias.codedeploy.models.ListOnPremisesInstancesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.ListOnPremisesInstancesOutput, avias.codedeploy.models.ListOnPremisesInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListOnPremisesInstances", POST, "/", input)
  override def listApplicationRevisions(input: avias.codedeploy.models.ListApplicationRevisionsInput): F[avias.codedeploy.models.ListApplicationRevisionsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.ListApplicationRevisionsOutput, avias.codedeploy.models.ListApplicationRevisionsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListApplicationRevisions", POST, "/", input)
  override def listApplications(input: avias.codedeploy.models.ListApplicationsInput): F[avias.codedeploy.models.ListApplicationsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.ListApplicationsOutput, avias.codedeploy.models.ListApplicationsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListApplications", POST, "/", input)
  override def getApplicationRevision(input: avias.codedeploy.models.GetApplicationRevisionInput): F[avias.codedeploy.models.GetApplicationRevisionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.GetApplicationRevisionOutput, avias.codedeploy.models.GetApplicationRevisionInput](client, awsData, ServiceType, ServiceAndPrefix, "GetApplicationRevision", POST, "/", input)
  override def createApplication(input: avias.codedeploy.models.CreateApplicationInput): F[avias.codedeploy.models.CreateApplicationOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.CreateApplicationOutput, avias.codedeploy.models.CreateApplicationInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateApplication", POST, "/", input)
  override def getOnPremisesInstance(input: avias.codedeploy.models.GetOnPremisesInstanceInput): F[avias.codedeploy.models.GetOnPremisesInstanceOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.GetOnPremisesInstanceOutput, avias.codedeploy.models.GetOnPremisesInstanceInput](client, awsData, ServiceType, ServiceAndPrefix, "GetOnPremisesInstance", POST, "/", input)
  override def getDeploymentGroup(input: avias.codedeploy.models.GetDeploymentGroupInput): F[avias.codedeploy.models.GetDeploymentGroupOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.GetDeploymentGroupOutput, avias.codedeploy.models.GetDeploymentGroupInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDeploymentGroup", POST, "/", input)
  override def registerApplicationRevision(input: avias.codedeploy.models.RegisterApplicationRevisionInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codedeploy.models.RegisterApplicationRevisionInput](client, awsData, ServiceType, ServiceAndPrefix, "RegisterApplicationRevision", POST, "/", input)
  override def batchGetDeploymentGroups(input: avias.codedeploy.models.BatchGetDeploymentGroupsInput): F[avias.codedeploy.models.BatchGetDeploymentGroupsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.BatchGetDeploymentGroupsOutput, avias.codedeploy.models.BatchGetDeploymentGroupsInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetDeploymentGroups", POST, "/", input)
  override def batchGetDeployments(input: avias.codedeploy.models.BatchGetDeploymentsInput): F[avias.codedeploy.models.BatchGetDeploymentsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.BatchGetDeploymentsOutput, avias.codedeploy.models.BatchGetDeploymentsInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetDeployments", POST, "/", input)
  override def batchGetApplications(input: avias.codedeploy.models.BatchGetApplicationsInput): F[avias.codedeploy.models.BatchGetApplicationsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.BatchGetApplicationsOutput, avias.codedeploy.models.BatchGetApplicationsInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetApplications", POST, "/", input)
  override def batchGetOnPremisesInstances(input: avias.codedeploy.models.BatchGetOnPremisesInstancesInput): F[avias.codedeploy.models.BatchGetOnPremisesInstancesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.BatchGetOnPremisesInstancesOutput, avias.codedeploy.models.BatchGetOnPremisesInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetOnPremisesInstances", POST, "/", input)
  override def getApplication(input: avias.codedeploy.models.GetApplicationInput): F[avias.codedeploy.models.GetApplicationOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.GetApplicationOutput, avias.codedeploy.models.GetApplicationInput](client, awsData, ServiceType, ServiceAndPrefix, "GetApplication", POST, "/", input)
  override def listDeploymentGroups(input: avias.codedeploy.models.ListDeploymentGroupsInput): F[avias.codedeploy.models.ListDeploymentGroupsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codedeploy.models.ListDeploymentGroupsOutput, avias.codedeploy.models.ListDeploymentGroupsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListDeploymentGroups", POST, "/", input)
  override def deregisterOnPremisesInstance(input: avias.codedeploy.models.DeregisterOnPremisesInstanceInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codedeploy.models.DeregisterOnPremisesInstanceInput](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterOnPremisesInstance", POST, "/", input)
}