package avias.dynamodb.http4s
import org.http4s.Method._
import avias.dynamodb.circe._
import avias.dynamodb.models
import avias.common.http4s.ClientUtils._
class AmazondynamodbClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.dynamodb.Amazondynamodb[F] {
  private[this] final val ServiceType: String = "dynamodb"
  private[this] final val ServiceAndPrefix: Option[String] = Some("DynamoDB_20120810")
  override def listTables(input: avias.dynamodb.models.ListTablesInput): F[avias.dynamodb.models.ListTablesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.ListTablesOutput, avias.dynamodb.models.ListTablesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListTables", POST, "/", input)
  override def scan(input: avias.dynamodb.models.ScanInput): F[avias.dynamodb.models.ScanOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.ScanOutput, avias.dynamodb.models.ScanInput](client, awsData, ServiceType, ServiceAndPrefix, "Scan", POST, "/", input)
  override def batchWriteItem(input: avias.dynamodb.models.BatchWriteItemInput): F[avias.dynamodb.models.BatchWriteItemOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.BatchWriteItemOutput, avias.dynamodb.models.BatchWriteItemInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchWriteItem", POST, "/", input)
  override def putItem(input: avias.dynamodb.models.PutItemInput): F[avias.dynamodb.models.PutItemOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.PutItemOutput, avias.dynamodb.models.PutItemInput](client, awsData, ServiceType, ServiceAndPrefix, "PutItem", POST, "/", input)
  override def deleteItem(input: avias.dynamodb.models.DeleteItemInput): F[avias.dynamodb.models.DeleteItemOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.DeleteItemOutput, avias.dynamodb.models.DeleteItemInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteItem", POST, "/", input)
  override def untagResource(input: avias.dynamodb.models.UntagResourceInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.dynamodb.models.UntagResourceInput](client, awsData, ServiceType, ServiceAndPrefix, "UntagResource", POST, "/", input)
  override def createTable(input: avias.dynamodb.models.CreateTableInput): F[avias.dynamodb.models.CreateTableOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.CreateTableOutput, avias.dynamodb.models.CreateTableInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateTable", POST, "/", input)
  override def describeTimeToLive(input: avias.dynamodb.models.DescribeTimeToLiveInput): F[avias.dynamodb.models.DescribeTimeToLiveOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.DescribeTimeToLiveOutput, avias.dynamodb.models.DescribeTimeToLiveInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTimeToLive", POST, "/", input)
  override def deleteTable(input: avias.dynamodb.models.DeleteTableInput): F[avias.dynamodb.models.DeleteTableOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.DeleteTableOutput, avias.dynamodb.models.DeleteTableInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteTable", POST, "/", input)
  override def getItem(input: avias.dynamodb.models.GetItemInput): F[avias.dynamodb.models.GetItemOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.GetItemOutput, avias.dynamodb.models.GetItemInput](client, awsData, ServiceType, ServiceAndPrefix, "GetItem", POST, "/", input)
  override def updateItem(input: avias.dynamodb.models.UpdateItemInput): F[avias.dynamodb.models.UpdateItemOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.UpdateItemOutput, avias.dynamodb.models.UpdateItemInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateItem", POST, "/", input)
  override def tagResource(input: avias.dynamodb.models.TagResourceInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.dynamodb.models.TagResourceInput](client, awsData, ServiceType, ServiceAndPrefix, "TagResource", POST, "/", input)
  override def describeLimits: F[avias.dynamodb.models.DescribeLimitsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.DescribeLimitsOutput, scala.Unit](client, awsData, ServiceType, ServiceAndPrefix, "DescribeLimits", POST, "/", ())
  override def updateTable(input: avias.dynamodb.models.UpdateTableInput): F[avias.dynamodb.models.UpdateTableOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.UpdateTableOutput, avias.dynamodb.models.UpdateTableInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateTable", POST, "/", input)
  override def query(input: avias.dynamodb.models.QueryInput): F[avias.dynamodb.models.QueryOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.QueryOutput, avias.dynamodb.models.QueryInput](client, awsData, ServiceType, ServiceAndPrefix, "Query", POST, "/", input)
  override def listTagsOfResource(input: avias.dynamodb.models.ListTagsOfResourceInput): F[avias.dynamodb.models.ListTagsOfResourceOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.ListTagsOfResourceOutput, avias.dynamodb.models.ListTagsOfResourceInput](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsOfResource", POST, "/", input)
  override def describeTable(input: avias.dynamodb.models.DescribeTableInput): F[avias.dynamodb.models.DescribeTableOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.DescribeTableOutput, avias.dynamodb.models.DescribeTableInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTable", POST, "/", input)
  override def updateTimeToLive(input: avias.dynamodb.models.UpdateTimeToLiveInput): F[avias.dynamodb.models.UpdateTimeToLiveOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.UpdateTimeToLiveOutput, avias.dynamodb.models.UpdateTimeToLiveInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateTimeToLive", POST, "/", input)
  override def batchGetItem(input: avias.dynamodb.models.BatchGetItemInput): F[avias.dynamodb.models.BatchGetItemOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.dynamodb.models.BatchGetItemOutput, avias.dynamodb.models.BatchGetItemInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetItem", POST, "/", input)
}