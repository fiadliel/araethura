package avias.inspector.http4s
import org.http4s.Method._
import avias.inspector.circe._
import avias.inspector.models
import avias.common.http4s.ClientUtils._
class AmazoninspectorClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.inspector.Amazoninspector[F] {
  private[this] final val ServiceType: String = "inspector"
  private[this] final val ServiceAndPrefix: Option[String] = Some("InspectorService")
  override def createAssessmentTemplate(input: avias.inspector.models.CreateAssessmentTemplateRequest): F[avias.inspector.models.CreateAssessmentTemplateResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.CreateAssessmentTemplateResponse, avias.inspector.models.CreateAssessmentTemplateRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateAssessmentTemplate", POST, "/", input)
  override def removeAttributesFromFindings(input: avias.inspector.models.RemoveAttributesFromFindingsRequest): F[avias.inspector.models.RemoveAttributesFromFindingsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.RemoveAttributesFromFindingsResponse, avias.inspector.models.RemoveAttributesFromFindingsRequest](client, awsData, ServiceType, ServiceAndPrefix, "RemoveAttributesFromFindings", POST, "/", input)
  override def listEventSubscriptions(input: avias.inspector.models.ListEventSubscriptionsRequest): F[avias.inspector.models.ListEventSubscriptionsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.ListEventSubscriptionsResponse, avias.inspector.models.ListEventSubscriptionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListEventSubscriptions", POST, "/", input)
  override def setTagsForResource(input: avias.inspector.models.SetTagsForResourceRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.inspector.models.SetTagsForResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "SetTagsForResource", POST, "/", input)
  override def listFindings(input: avias.inspector.models.ListFindingsRequest): F[avias.inspector.models.ListFindingsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.ListFindingsResponse, avias.inspector.models.ListFindingsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListFindings", POST, "/", input)
  override def listTagsForResource(input: avias.inspector.models.ListTagsForResourceRequest): F[avias.inspector.models.ListTagsForResourceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.ListTagsForResourceResponse, avias.inspector.models.ListTagsForResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForResource", POST, "/", input)
  override def unsubscribeFromEvent(input: avias.inspector.models.UnsubscribeFromEventRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.inspector.models.UnsubscribeFromEventRequest](client, awsData, ServiceType, ServiceAndPrefix, "UnsubscribeFromEvent", POST, "/", input)
  override def describeRulesPackages(input: avias.inspector.models.DescribeRulesPackagesRequest): F[avias.inspector.models.DescribeRulesPackagesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.DescribeRulesPackagesResponse, avias.inspector.models.DescribeRulesPackagesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeRulesPackages", POST, "/", input)
  override def addAttributesToFindings(input: avias.inspector.models.AddAttributesToFindingsRequest): F[avias.inspector.models.AddAttributesToFindingsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.AddAttributesToFindingsResponse, avias.inspector.models.AddAttributesToFindingsRequest](client, awsData, ServiceType, ServiceAndPrefix, "AddAttributesToFindings", POST, "/", input)
  override def updateAssessmentTarget(input: avias.inspector.models.UpdateAssessmentTargetRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.inspector.models.UpdateAssessmentTargetRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateAssessmentTarget", POST, "/", input)
  override def listRulesPackages(input: avias.inspector.models.ListRulesPackagesRequest): F[avias.inspector.models.ListRulesPackagesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.ListRulesPackagesResponse, avias.inspector.models.ListRulesPackagesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListRulesPackages", POST, "/", input)
  override def describeAssessmentTemplates(input: avias.inspector.models.DescribeAssessmentTemplatesRequest): F[avias.inspector.models.DescribeAssessmentTemplatesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.DescribeAssessmentTemplatesResponse, avias.inspector.models.DescribeAssessmentTemplatesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAssessmentTemplates", POST, "/", input)
  override def listAssessmentRuns(input: avias.inspector.models.ListAssessmentRunsRequest): F[avias.inspector.models.ListAssessmentRunsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.ListAssessmentRunsResponse, avias.inspector.models.ListAssessmentRunsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAssessmentRuns", POST, "/", input)
  override def describeFindings(input: avias.inspector.models.DescribeFindingsRequest): F[avias.inspector.models.DescribeFindingsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.DescribeFindingsResponse, avias.inspector.models.DescribeFindingsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeFindings", POST, "/", input)
  override def listAssessmentTargets(input: avias.inspector.models.ListAssessmentTargetsRequest): F[avias.inspector.models.ListAssessmentTargetsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.ListAssessmentTargetsResponse, avias.inspector.models.ListAssessmentTargetsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAssessmentTargets", POST, "/", input)
  override def describeResourceGroups(input: avias.inspector.models.DescribeResourceGroupsRequest): F[avias.inspector.models.DescribeResourceGroupsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.DescribeResourceGroupsResponse, avias.inspector.models.DescribeResourceGroupsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeResourceGroups", POST, "/", input)
  override def getTelemetryMetadata(input: avias.inspector.models.GetTelemetryMetadataRequest): F[avias.inspector.models.GetTelemetryMetadataResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.GetTelemetryMetadataResponse, avias.inspector.models.GetTelemetryMetadataRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetTelemetryMetadata", POST, "/", input)
  override def deleteAssessmentTarget(input: avias.inspector.models.DeleteAssessmentTargetRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.inspector.models.DeleteAssessmentTargetRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteAssessmentTarget", POST, "/", input)
  override def describeAssessmentRuns(input: avias.inspector.models.DescribeAssessmentRunsRequest): F[avias.inspector.models.DescribeAssessmentRunsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.DescribeAssessmentRunsResponse, avias.inspector.models.DescribeAssessmentRunsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAssessmentRuns", POST, "/", input)
  override def previewAgents(input: avias.inspector.models.PreviewAgentsRequest): F[avias.inspector.models.PreviewAgentsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.PreviewAgentsResponse, avias.inspector.models.PreviewAgentsRequest](client, awsData, ServiceType, ServiceAndPrefix, "PreviewAgents", POST, "/", input)
  override def registerCrossAccountAccessRole(input: avias.inspector.models.RegisterCrossAccountAccessRoleRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.inspector.models.RegisterCrossAccountAccessRoleRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterCrossAccountAccessRole", POST, "/", input)
  override def describeAssessmentTargets(input: avias.inspector.models.DescribeAssessmentTargetsRequest): F[avias.inspector.models.DescribeAssessmentTargetsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.DescribeAssessmentTargetsResponse, avias.inspector.models.DescribeAssessmentTargetsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAssessmentTargets", POST, "/", input)
  override def deleteAssessmentRun(input: avias.inspector.models.DeleteAssessmentRunRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.inspector.models.DeleteAssessmentRunRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteAssessmentRun", POST, "/", input)
  override def listAssessmentRunAgents(input: avias.inspector.models.ListAssessmentRunAgentsRequest): F[avias.inspector.models.ListAssessmentRunAgentsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.ListAssessmentRunAgentsResponse, avias.inspector.models.ListAssessmentRunAgentsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAssessmentRunAgents", POST, "/", input)
  override def getAssessmentReport(input: avias.inspector.models.GetAssessmentReportRequest): F[avias.inspector.models.GetAssessmentReportResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.GetAssessmentReportResponse, avias.inspector.models.GetAssessmentReportRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetAssessmentReport", POST, "/", input)
  override def describeCrossAccountAccessRole: F[avias.inspector.models.DescribeCrossAccountAccessRoleResponse] = avias.common.http4s.ClientUtils.doRequestWithoutBody[F, avias.inspector.models.DescribeCrossAccountAccessRoleResponse](client, awsData, ServiceType, ServiceAndPrefix, "DescribeCrossAccountAccessRole", POST, "/")
  override def startAssessmentRun(input: avias.inspector.models.StartAssessmentRunRequest): F[avias.inspector.models.StartAssessmentRunResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.StartAssessmentRunResponse, avias.inspector.models.StartAssessmentRunRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartAssessmentRun", POST, "/", input)
  override def deleteAssessmentTemplate(input: avias.inspector.models.DeleteAssessmentTemplateRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.inspector.models.DeleteAssessmentTemplateRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteAssessmentTemplate", POST, "/", input)
  override def createResourceGroup(input: avias.inspector.models.CreateResourceGroupRequest): F[avias.inspector.models.CreateResourceGroupResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.CreateResourceGroupResponse, avias.inspector.models.CreateResourceGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateResourceGroup", POST, "/", input)
  override def subscribeToEvent(input: avias.inspector.models.SubscribeToEventRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.inspector.models.SubscribeToEventRequest](client, awsData, ServiceType, ServiceAndPrefix, "SubscribeToEvent", POST, "/", input)
  override def createAssessmentTarget(input: avias.inspector.models.CreateAssessmentTargetRequest): F[avias.inspector.models.CreateAssessmentTargetResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.CreateAssessmentTargetResponse, avias.inspector.models.CreateAssessmentTargetRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateAssessmentTarget", POST, "/", input)
  override def stopAssessmentRun(input: avias.inspector.models.StopAssessmentRunRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.inspector.models.StopAssessmentRunRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopAssessmentRun", POST, "/", input)
  override def listAssessmentTemplates(input: avias.inspector.models.ListAssessmentTemplatesRequest): F[avias.inspector.models.ListAssessmentTemplatesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.inspector.models.ListAssessmentTemplatesResponse, avias.inspector.models.ListAssessmentTemplatesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAssessmentTemplates", POST, "/", input)
}