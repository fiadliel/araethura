package avias.directconnect.http4s
import org.http4s.Method._
import avias.directconnect.circe._
import avias.directconnect.models
import avias.common.http4s.ClientUtils._
class AmazondirectconnectClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.directconnect.Amazondirectconnect[F] {
  private[this] final val ServiceType: String = "directconnect"
  private[this] final val ServiceAndPrefix: Option[String] = Some("OvertureService")
  override def describeVirtualGateways: F[avias.directconnect.models.VirtualGateways] = avias.common.http4s.ClientUtils.doRequestWithoutBody[F, avias.directconnect.models.VirtualGateways](client, awsData, ServiceType, ServiceAndPrefix, "DescribeVirtualGateways", POST, "/")
  override def deleteBGPPeer(input: avias.directconnect.models.DeleteBGPPeerRequest): F[avias.directconnect.models.DeleteBGPPeerResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DeleteBGPPeerResponse, avias.directconnect.models.DeleteBGPPeerRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteBGPPeer", POST, "/", input)
  override def describeDirectConnectGateways(input: avias.directconnect.models.DescribeDirectConnectGatewaysRequest): F[avias.directconnect.models.DescribeDirectConnectGatewaysResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DescribeDirectConnectGatewaysResult, avias.directconnect.models.DescribeDirectConnectGatewaysRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDirectConnectGateways", POST, "/", input)
  override def allocatePrivateVirtualInterface(input: avias.directconnect.models.AllocatePrivateVirtualInterfaceRequest): F[avias.directconnect.models.VirtualInterface] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.VirtualInterface, avias.directconnect.models.AllocatePrivateVirtualInterfaceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AllocatePrivateVirtualInterface", POST, "/", input)
  override def deleteConnection(input: avias.directconnect.models.DeleteConnectionRequest): F[avias.directconnect.models.Connection] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Connection, avias.directconnect.models.DeleteConnectionRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteConnection", POST, "/", input)
  override def deleteDirectConnectGateway(input: avias.directconnect.models.DeleteDirectConnectGatewayRequest): F[avias.directconnect.models.DeleteDirectConnectGatewayResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DeleteDirectConnectGatewayResult, avias.directconnect.models.DeleteDirectConnectGatewayRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDirectConnectGateway", POST, "/", input)
  override def confirmConnection(input: avias.directconnect.models.ConfirmConnectionRequest): F[avias.directconnect.models.ConfirmConnectionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.ConfirmConnectionResponse, avias.directconnect.models.ConfirmConnectionRequest](client, awsData, ServiceType, ServiceAndPrefix, "ConfirmConnection", POST, "/", input)
  override def describeDirectConnectGatewayAssociations(input: avias.directconnect.models.DescribeDirectConnectGatewayAssociationsRequest): F[avias.directconnect.models.DescribeDirectConnectGatewayAssociationsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DescribeDirectConnectGatewayAssociationsResult, avias.directconnect.models.DescribeDirectConnectGatewayAssociationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDirectConnectGatewayAssociations", POST, "/", input)
  override def associateVirtualInterface(input: avias.directconnect.models.AssociateVirtualInterfaceRequest): F[avias.directconnect.models.VirtualInterface] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.VirtualInterface, avias.directconnect.models.AssociateVirtualInterfaceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AssociateVirtualInterface", POST, "/", input)
  override def disassociateConnectionFromLag(input: avias.directconnect.models.DisassociateConnectionFromLagRequest): F[avias.directconnect.models.Connection] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Connection, avias.directconnect.models.DisassociateConnectionFromLagRequest](client, awsData, ServiceType, ServiceAndPrefix, "DisassociateConnectionFromLag", POST, "/", input)
  override def confirmPublicVirtualInterface(input: avias.directconnect.models.ConfirmPublicVirtualInterfaceRequest): F[avias.directconnect.models.ConfirmPublicVirtualInterfaceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.ConfirmPublicVirtualInterfaceResponse, avias.directconnect.models.ConfirmPublicVirtualInterfaceRequest](client, awsData, ServiceType, ServiceAndPrefix, "ConfirmPublicVirtualInterface", POST, "/", input)
  override def createDirectConnectGateway(input: avias.directconnect.models.CreateDirectConnectGatewayRequest): F[avias.directconnect.models.CreateDirectConnectGatewayResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.CreateDirectConnectGatewayResult, avias.directconnect.models.CreateDirectConnectGatewayRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDirectConnectGateway", POST, "/", input)
  override def untagResource(input: avias.directconnect.models.UntagResourceRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.directconnect.models.UntagResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "UntagResource", POST, "/", input)
  override def createInterconnect(input: avias.directconnect.models.CreateInterconnectRequest): F[avias.directconnect.models.Interconnect] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Interconnect, avias.directconnect.models.CreateInterconnectRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateInterconnect", POST, "/", input)
  override def createPrivateVirtualInterface(input: avias.directconnect.models.CreatePrivateVirtualInterfaceRequest): F[avias.directconnect.models.VirtualInterface] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.VirtualInterface, avias.directconnect.models.CreatePrivateVirtualInterfaceRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreatePrivateVirtualInterface", POST, "/", input)
  override def describeConnections(input: avias.directconnect.models.DescribeConnectionsRequest): F[avias.directconnect.models.Connections] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Connections, avias.directconnect.models.DescribeConnectionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeConnections", POST, "/", input)
  override def describeLags(input: avias.directconnect.models.DescribeLagsRequest): F[avias.directconnect.models.Lags] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Lags, avias.directconnect.models.DescribeLagsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeLags", POST, "/", input)
  override def describeConnectionsOnInterconnect(input: avias.directconnect.models.DescribeConnectionsOnInterconnectRequest): F[avias.directconnect.models.Connections] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Connections, avias.directconnect.models.DescribeConnectionsOnInterconnectRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeConnectionsOnInterconnect", POST, "/", input)
  override def describeInterconnects(input: avias.directconnect.models.DescribeInterconnectsRequest): F[avias.directconnect.models.Interconnects] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Interconnects, avias.directconnect.models.DescribeInterconnectsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInterconnects", POST, "/", input)
  override def describeLocations: F[avias.directconnect.models.Locations] = avias.common.http4s.ClientUtils.doRequestWithoutBody[F, avias.directconnect.models.Locations](client, awsData, ServiceType, ServiceAndPrefix, "DescribeLocations", POST, "/")
  override def describeConnectionLoa(input: avias.directconnect.models.DescribeConnectionLoaRequest): F[avias.directconnect.models.DescribeConnectionLoaResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DescribeConnectionLoaResponse, avias.directconnect.models.DescribeConnectionLoaRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeConnectionLoa", POST, "/", input)
  override def deleteVirtualInterface(input: avias.directconnect.models.DeleteVirtualInterfaceRequest): F[avias.directconnect.models.DeleteVirtualInterfaceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DeleteVirtualInterfaceResponse, avias.directconnect.models.DeleteVirtualInterfaceRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteVirtualInterface", POST, "/", input)
  override def allocatePublicVirtualInterface(input: avias.directconnect.models.AllocatePublicVirtualInterfaceRequest): F[avias.directconnect.models.VirtualInterface] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.VirtualInterface, avias.directconnect.models.AllocatePublicVirtualInterfaceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AllocatePublicVirtualInterface", POST, "/", input)
  override def confirmPrivateVirtualInterface(input: avias.directconnect.models.ConfirmPrivateVirtualInterfaceRequest): F[avias.directconnect.models.ConfirmPrivateVirtualInterfaceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.ConfirmPrivateVirtualInterfaceResponse, avias.directconnect.models.ConfirmPrivateVirtualInterfaceRequest](client, awsData, ServiceType, ServiceAndPrefix, "ConfirmPrivateVirtualInterface", POST, "/", input)
  override def deleteDirectConnectGatewayAssociation(input: avias.directconnect.models.DeleteDirectConnectGatewayAssociationRequest): F[avias.directconnect.models.DeleteDirectConnectGatewayAssociationResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DeleteDirectConnectGatewayAssociationResult, avias.directconnect.models.DeleteDirectConnectGatewayAssociationRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDirectConnectGatewayAssociation", POST, "/", input)
  override def describeDirectConnectGatewayAttachments(input: avias.directconnect.models.DescribeDirectConnectGatewayAttachmentsRequest): F[avias.directconnect.models.DescribeDirectConnectGatewayAttachmentsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DescribeDirectConnectGatewayAttachmentsResult, avias.directconnect.models.DescribeDirectConnectGatewayAttachmentsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDirectConnectGatewayAttachments", POST, "/", input)
  override def createConnection(input: avias.directconnect.models.CreateConnectionRequest): F[avias.directconnect.models.Connection] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Connection, avias.directconnect.models.CreateConnectionRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateConnection", POST, "/", input)
  override def describeHostedConnections(input: avias.directconnect.models.DescribeHostedConnectionsRequest): F[avias.directconnect.models.Connections] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Connections, avias.directconnect.models.DescribeHostedConnectionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeHostedConnections", POST, "/", input)
  override def allocateHostedConnection(input: avias.directconnect.models.AllocateHostedConnectionRequest): F[avias.directconnect.models.Connection] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Connection, avias.directconnect.models.AllocateHostedConnectionRequest](client, awsData, ServiceType, ServiceAndPrefix, "AllocateHostedConnection", POST, "/", input)
  override def createPublicVirtualInterface(input: avias.directconnect.models.CreatePublicVirtualInterfaceRequest): F[avias.directconnect.models.VirtualInterface] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.VirtualInterface, avias.directconnect.models.CreatePublicVirtualInterfaceRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreatePublicVirtualInterface", POST, "/", input)
  override def deleteInterconnect(input: avias.directconnect.models.DeleteInterconnectRequest): F[avias.directconnect.models.DeleteInterconnectResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DeleteInterconnectResponse, avias.directconnect.models.DeleteInterconnectRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteInterconnect", POST, "/", input)
  override def createBGPPeer(input: avias.directconnect.models.CreateBGPPeerRequest): F[avias.directconnect.models.CreateBGPPeerResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.CreateBGPPeerResponse, avias.directconnect.models.CreateBGPPeerRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateBGPPeer", POST, "/", input)
  override def describeVirtualInterfaces(input: avias.directconnect.models.DescribeVirtualInterfacesRequest): F[avias.directconnect.models.VirtualInterfaces] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.VirtualInterfaces, avias.directconnect.models.DescribeVirtualInterfacesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeVirtualInterfaces", POST, "/", input)
  override def createDirectConnectGatewayAssociation(input: avias.directconnect.models.CreateDirectConnectGatewayAssociationRequest): F[avias.directconnect.models.CreateDirectConnectGatewayAssociationResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.CreateDirectConnectGatewayAssociationResult, avias.directconnect.models.CreateDirectConnectGatewayAssociationRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDirectConnectGatewayAssociation", POST, "/", input)
  override def deleteLag(input: avias.directconnect.models.DeleteLagRequest): F[avias.directconnect.models.Lag] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Lag, avias.directconnect.models.DeleteLagRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteLag", POST, "/", input)
  override def describeInterconnectLoa(input: avias.directconnect.models.DescribeInterconnectLoaRequest): F[avias.directconnect.models.DescribeInterconnectLoaResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DescribeInterconnectLoaResponse, avias.directconnect.models.DescribeInterconnectLoaRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInterconnectLoa", POST, "/", input)
  override def associateHostedConnection(input: avias.directconnect.models.AssociateHostedConnectionRequest): F[avias.directconnect.models.Connection] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Connection, avias.directconnect.models.AssociateHostedConnectionRequest](client, awsData, ServiceType, ServiceAndPrefix, "AssociateHostedConnection", POST, "/", input)
  override def createLag(input: avias.directconnect.models.CreateLagRequest): F[avias.directconnect.models.Lag] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Lag, avias.directconnect.models.CreateLagRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateLag", POST, "/", input)
  override def allocateConnectionOnInterconnect(input: avias.directconnect.models.AllocateConnectionOnInterconnectRequest): F[avias.directconnect.models.Connection] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Connection, avias.directconnect.models.AllocateConnectionOnInterconnectRequest](client, awsData, ServiceType, ServiceAndPrefix, "AllocateConnectionOnInterconnect", POST, "/", input)
  override def describeTags(input: avias.directconnect.models.DescribeTagsRequest): F[avias.directconnect.models.DescribeTagsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.DescribeTagsResponse, avias.directconnect.models.DescribeTagsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTags", POST, "/", input)
  override def updateLag(input: avias.directconnect.models.UpdateLagRequest): F[avias.directconnect.models.Lag] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Lag, avias.directconnect.models.UpdateLagRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateLag", POST, "/", input)
  override def tagResource(input: avias.directconnect.models.TagResourceRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.directconnect.models.TagResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "TagResource", POST, "/", input)
  override def describeLoa(input: avias.directconnect.models.DescribeLoaRequest): F[avias.directconnect.models.Loa] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Loa, avias.directconnect.models.DescribeLoaRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeLoa", POST, "/", input)
  override def associateConnectionWithLag(input: avias.directconnect.models.AssociateConnectionWithLagRequest): F[avias.directconnect.models.Connection] = avias.common.http4s.ClientUtils.doRequest[F, avias.directconnect.models.Connection, avias.directconnect.models.AssociateConnectionWithLagRequest](client, awsData, ServiceType, ServiceAndPrefix, "AssociateConnectionWithLag", POST, "/", input)
}