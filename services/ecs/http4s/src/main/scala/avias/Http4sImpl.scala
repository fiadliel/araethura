package avias.ecs.http4s
import org.http4s.Method._
import avias.ecs.circe._
import avias.ecs.models
import avias.common.http4s.ClientUtils._
class AmazonecsClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.ecs.Amazonecs[F] {
  private[this] final val ServiceType: String = "ecs"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AmazonEC2ContainerServiceV20141113")
  override def submitContainerStateChange(input: avias.ecs.models.SubmitContainerStateChangeRequest): F[avias.ecs.models.SubmitContainerStateChangeResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.SubmitContainerStateChangeResponse, avias.ecs.models.SubmitContainerStateChangeRequest](client, awsData, ServiceType, ServiceAndPrefix, "SubmitContainerStateChange", POST, "/", input)
  override def describeTaskDefinition(input: avias.ecs.models.DescribeTaskDefinitionRequest): F[avias.ecs.models.DescribeTaskDefinitionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DescribeTaskDefinitionResponse, avias.ecs.models.DescribeTaskDefinitionRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTaskDefinition", POST, "/", input)
  override def listAttributes(input: avias.ecs.models.ListAttributesRequest): F[avias.ecs.models.ListAttributesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.ListAttributesResponse, avias.ecs.models.ListAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAttributes", POST, "/", input)
  override def listContainerInstances(input: avias.ecs.models.ListContainerInstancesRequest): F[avias.ecs.models.ListContainerInstancesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.ListContainerInstancesResponse, avias.ecs.models.ListContainerInstancesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListContainerInstances", POST, "/", input)
  override def deregisterContainerInstance(input: avias.ecs.models.DeregisterContainerInstanceRequest): F[avias.ecs.models.DeregisterContainerInstanceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DeregisterContainerInstanceResponse, avias.ecs.models.DeregisterContainerInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterContainerInstance", POST, "/", input)
  override def deleteService(input: avias.ecs.models.DeleteServiceRequest): F[avias.ecs.models.DeleteServiceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DeleteServiceResponse, avias.ecs.models.DeleteServiceRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteService", POST, "/", input)
  override def runTask(input: avias.ecs.models.RunTaskRequest): F[avias.ecs.models.RunTaskResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.RunTaskResponse, avias.ecs.models.RunTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "RunTask", POST, "/", input)
  override def describeClusters(input: avias.ecs.models.DescribeClustersRequest): F[avias.ecs.models.DescribeClustersResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DescribeClustersResponse, avias.ecs.models.DescribeClustersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeClusters", POST, "/", input)
  override def putAttributes(input: avias.ecs.models.PutAttributesRequest): F[avias.ecs.models.PutAttributesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.PutAttributesResponse, avias.ecs.models.PutAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutAttributes", POST, "/", input)
  override def describeServices(input: avias.ecs.models.DescribeServicesRequest): F[avias.ecs.models.DescribeServicesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DescribeServicesResponse, avias.ecs.models.DescribeServicesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeServices", POST, "/", input)
  override def createService(input: avias.ecs.models.CreateServiceRequest): F[avias.ecs.models.CreateServiceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.CreateServiceResponse, avias.ecs.models.CreateServiceRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateService", POST, "/", input)
  override def listTasks(input: avias.ecs.models.ListTasksRequest): F[avias.ecs.models.ListTasksResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.ListTasksResponse, avias.ecs.models.ListTasksRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTasks", POST, "/", input)
  override def listTaskDefinitions(input: avias.ecs.models.ListTaskDefinitionsRequest): F[avias.ecs.models.ListTaskDefinitionsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.ListTaskDefinitionsResponse, avias.ecs.models.ListTaskDefinitionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTaskDefinitions", POST, "/", input)
  override def describeContainerInstances(input: avias.ecs.models.DescribeContainerInstancesRequest): F[avias.ecs.models.DescribeContainerInstancesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DescribeContainerInstancesResponse, avias.ecs.models.DescribeContainerInstancesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeContainerInstances", POST, "/", input)
  override def listClusters(input: avias.ecs.models.ListClustersRequest): F[avias.ecs.models.ListClustersResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.ListClustersResponse, avias.ecs.models.ListClustersRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListClusters", POST, "/", input)
  override def deleteCluster(input: avias.ecs.models.DeleteClusterRequest): F[avias.ecs.models.DeleteClusterResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DeleteClusterResponse, avias.ecs.models.DeleteClusterRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteCluster", POST, "/", input)
  override def updateContainerInstancesState(input: avias.ecs.models.UpdateContainerInstancesStateRequest): F[avias.ecs.models.UpdateContainerInstancesStateResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.UpdateContainerInstancesStateResponse, avias.ecs.models.UpdateContainerInstancesStateRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateContainerInstancesState", POST, "/", input)
  override def deregisterTaskDefinition(input: avias.ecs.models.DeregisterTaskDefinitionRequest): F[avias.ecs.models.DeregisterTaskDefinitionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DeregisterTaskDefinitionResponse, avias.ecs.models.DeregisterTaskDefinitionRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterTaskDefinition", POST, "/", input)
  override def stopTask(input: avias.ecs.models.StopTaskRequest): F[avias.ecs.models.StopTaskResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.StopTaskResponse, avias.ecs.models.StopTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopTask", POST, "/", input)
  override def updateService(input: avias.ecs.models.UpdateServiceRequest): F[avias.ecs.models.UpdateServiceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.UpdateServiceResponse, avias.ecs.models.UpdateServiceRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateService", POST, "/", input)
  override def startTask(input: avias.ecs.models.StartTaskRequest): F[avias.ecs.models.StartTaskResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.StartTaskResponse, avias.ecs.models.StartTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartTask", POST, "/", input)
  override def registerContainerInstance(input: avias.ecs.models.RegisterContainerInstanceRequest): F[avias.ecs.models.RegisterContainerInstanceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.RegisterContainerInstanceResponse, avias.ecs.models.RegisterContainerInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterContainerInstance", POST, "/", input)
  override def registerTaskDefinition(input: avias.ecs.models.RegisterTaskDefinitionRequest): F[avias.ecs.models.RegisterTaskDefinitionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.RegisterTaskDefinitionResponse, avias.ecs.models.RegisterTaskDefinitionRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterTaskDefinition", POST, "/", input)
  override def deleteAttributes(input: avias.ecs.models.DeleteAttributesRequest): F[avias.ecs.models.DeleteAttributesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DeleteAttributesResponse, avias.ecs.models.DeleteAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteAttributes", POST, "/", input)
  override def submitTaskStateChange(input: avias.ecs.models.SubmitTaskStateChangeRequest): F[avias.ecs.models.SubmitTaskStateChangeResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.SubmitTaskStateChangeResponse, avias.ecs.models.SubmitTaskStateChangeRequest](client, awsData, ServiceType, ServiceAndPrefix, "SubmitTaskStateChange", POST, "/", input)
  override def discoverPollEndpoint(input: avias.ecs.models.DiscoverPollEndpointRequest): F[avias.ecs.models.DiscoverPollEndpointResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DiscoverPollEndpointResponse, avias.ecs.models.DiscoverPollEndpointRequest](client, awsData, ServiceType, ServiceAndPrefix, "DiscoverPollEndpoint", POST, "/", input)
  override def createCluster(input: avias.ecs.models.CreateClusterRequest): F[avias.ecs.models.CreateClusterResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.CreateClusterResponse, avias.ecs.models.CreateClusterRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateCluster", POST, "/", input)
  override def updateContainerAgent(input: avias.ecs.models.UpdateContainerAgentRequest): F[avias.ecs.models.UpdateContainerAgentResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.UpdateContainerAgentResponse, avias.ecs.models.UpdateContainerAgentRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateContainerAgent", POST, "/", input)
  override def describeTasks(input: avias.ecs.models.DescribeTasksRequest): F[avias.ecs.models.DescribeTasksResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.DescribeTasksResponse, avias.ecs.models.DescribeTasksRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTasks", POST, "/", input)
  override def listTaskDefinitionFamilies(input: avias.ecs.models.ListTaskDefinitionFamiliesRequest): F[avias.ecs.models.ListTaskDefinitionFamiliesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.ListTaskDefinitionFamiliesResponse, avias.ecs.models.ListTaskDefinitionFamiliesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTaskDefinitionFamilies", POST, "/", input)
  override def listServices(input: avias.ecs.models.ListServicesRequest): F[avias.ecs.models.ListServicesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ecs.models.ListServicesResponse, avias.ecs.models.ListServicesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListServices", POST, "/", input)
}