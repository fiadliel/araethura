package avias.datapipeline.http4s
import org.http4s.Method._
import avias.datapipeline.circe._
import avias.datapipeline.models
import avias.common.http4s.ClientUtils._
class AmazondatapipelineClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.datapipeline.Amazondatapipeline[F] {
  private[this] final val ServiceType: String = "datapipeline"
  private[this] final val ServiceAndPrefix: Option[String] = Some("DataPipeline")
  override def deactivatePipeline(input: avias.datapipeline.models.DeactivatePipelineInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.datapipeline.models.DeactivatePipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "DeactivatePipeline", POST, "/", input)
  override def queryObjects(input: avias.datapipeline.models.QueryObjectsInput): F[avias.datapipeline.models.QueryObjectsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.QueryObjectsOutput, avias.datapipeline.models.QueryObjectsInput](client, awsData, ServiceType, ServiceAndPrefix, "QueryObjects", POST, "/", input)
  override def putPipelineDefinition(input: avias.datapipeline.models.PutPipelineDefinitionInput): F[avias.datapipeline.models.PutPipelineDefinitionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.PutPipelineDefinitionOutput, avias.datapipeline.models.PutPipelineDefinitionInput](client, awsData, ServiceType, ServiceAndPrefix, "PutPipelineDefinition", POST, "/", input)
  override def evaluateExpression(input: avias.datapipeline.models.EvaluateExpressionInput): F[avias.datapipeline.models.EvaluateExpressionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.EvaluateExpressionOutput, avias.datapipeline.models.EvaluateExpressionInput](client, awsData, ServiceType, ServiceAndPrefix, "EvaluateExpression", POST, "/", input)
  override def reportTaskRunnerHeartbeat(input: avias.datapipeline.models.ReportTaskRunnerHeartbeatInput): F[avias.datapipeline.models.ReportTaskRunnerHeartbeatOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.ReportTaskRunnerHeartbeatOutput, avias.datapipeline.models.ReportTaskRunnerHeartbeatInput](client, awsData, ServiceType, ServiceAndPrefix, "ReportTaskRunnerHeartbeat", POST, "/", input)
  override def getPipelineDefinition(input: avias.datapipeline.models.GetPipelineDefinitionInput): F[avias.datapipeline.models.GetPipelineDefinitionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.GetPipelineDefinitionOutput, avias.datapipeline.models.GetPipelineDefinitionInput](client, awsData, ServiceType, ServiceAndPrefix, "GetPipelineDefinition", POST, "/", input)
  override def reportTaskProgress(input: avias.datapipeline.models.ReportTaskProgressInput): F[avias.datapipeline.models.ReportTaskProgressOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.ReportTaskProgressOutput, avias.datapipeline.models.ReportTaskProgressInput](client, awsData, ServiceType, ServiceAndPrefix, "ReportTaskProgress", POST, "/", input)
  override def validatePipelineDefinition(input: avias.datapipeline.models.ValidatePipelineDefinitionInput): F[avias.datapipeline.models.ValidatePipelineDefinitionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.ValidatePipelineDefinitionOutput, avias.datapipeline.models.ValidatePipelineDefinitionInput](client, awsData, ServiceType, ServiceAndPrefix, "ValidatePipelineDefinition", POST, "/", input)
  override def deletePipeline(input: avias.datapipeline.models.DeletePipelineInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.datapipeline.models.DeletePipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "DeletePipeline", POST, "/", input)
  override def pollForTask(input: avias.datapipeline.models.PollForTaskInput): F[avias.datapipeline.models.PollForTaskOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.PollForTaskOutput, avias.datapipeline.models.PollForTaskInput](client, awsData, ServiceType, ServiceAndPrefix, "PollForTask", POST, "/", input)
  override def activatePipeline(input: avias.datapipeline.models.ActivatePipelineInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.datapipeline.models.ActivatePipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "ActivatePipeline", POST, "/", input)
  override def setStatus(input: avias.datapipeline.models.SetStatusInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.datapipeline.models.SetStatusInput](client, awsData, ServiceType, ServiceAndPrefix, "SetStatus", POST, "/", input)
  override def setTaskStatus(input: avias.datapipeline.models.SetTaskStatusInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.datapipeline.models.SetTaskStatusInput](client, awsData, ServiceType, ServiceAndPrefix, "SetTaskStatus", POST, "/", input)
  override def describeObjects(input: avias.datapipeline.models.DescribeObjectsInput): F[avias.datapipeline.models.DescribeObjectsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.DescribeObjectsOutput, avias.datapipeline.models.DescribeObjectsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeObjects", POST, "/", input)
  override def removeTags(input: avias.datapipeline.models.RemoveTagsInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.datapipeline.models.RemoveTagsInput](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTags", POST, "/", input)
  override def addTags(input: avias.datapipeline.models.AddTagsInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.datapipeline.models.AddTagsInput](client, awsData, ServiceType, ServiceAndPrefix, "AddTags", POST, "/", input)
  override def describePipelines(input: avias.datapipeline.models.DescribePipelinesInput): F[avias.datapipeline.models.DescribePipelinesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.DescribePipelinesOutput, avias.datapipeline.models.DescribePipelinesInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribePipelines", POST, "/", input)
  override def listPipelines(input: avias.datapipeline.models.ListPipelinesInput): F[avias.datapipeline.models.ListPipelinesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.ListPipelinesOutput, avias.datapipeline.models.ListPipelinesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListPipelines", POST, "/", input)
  override def createPipeline(input: avias.datapipeline.models.CreatePipelineInput): F[avias.datapipeline.models.CreatePipelineOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.datapipeline.models.CreatePipelineOutput, avias.datapipeline.models.CreatePipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "CreatePipeline", POST, "/", input)
}