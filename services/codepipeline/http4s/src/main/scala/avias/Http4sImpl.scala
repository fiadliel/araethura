package avias.codepipeline.http4s
import org.http4s.Method._
import avias.codepipeline.circe._
import avias.codepipeline.models
import avias.common.http4s.ClientUtils._
class AmazoncodepipelineClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.codepipeline.Amazoncodepipeline[F] {
  private[this] final val ServiceType: String = "codepipeline"
  private[this] final val ServiceAndPrefix: Option[String] = Some("CodePipeline_20150709")
  override def listPipelineExecutions(input: avias.codepipeline.models.ListPipelineExecutionsInput): F[avias.codepipeline.models.ListPipelineExecutionsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.ListPipelineExecutionsOutput, avias.codepipeline.models.ListPipelineExecutionsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListPipelineExecutions", POST, "/", input)
  override def createCustomActionType(input: avias.codepipeline.models.CreateCustomActionTypeInput): F[avias.codepipeline.models.CreateCustomActionTypeOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.CreateCustomActionTypeOutput, avias.codepipeline.models.CreateCustomActionTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateCustomActionType", POST, "/", input)
  override def putActionRevision(input: avias.codepipeline.models.PutActionRevisionInput): F[avias.codepipeline.models.PutActionRevisionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.PutActionRevisionOutput, avias.codepipeline.models.PutActionRevisionInput](client, awsData, ServiceType, ServiceAndPrefix, "PutActionRevision", POST, "/", input)
  override def acknowledgeJob(input: avias.codepipeline.models.AcknowledgeJobInput): F[avias.codepipeline.models.AcknowledgeJobOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.AcknowledgeJobOutput, avias.codepipeline.models.AcknowledgeJobInput](client, awsData, ServiceType, ServiceAndPrefix, "AcknowledgeJob", POST, "/", input)
  override def putApprovalResult(input: avias.codepipeline.models.PutApprovalResultInput): F[avias.codepipeline.models.PutApprovalResultOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.PutApprovalResultOutput, avias.codepipeline.models.PutApprovalResultInput](client, awsData, ServiceType, ServiceAndPrefix, "PutApprovalResult", POST, "/", input)
  override def putJobFailureResult(input: avias.codepipeline.models.PutJobFailureResultInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codepipeline.models.PutJobFailureResultInput](client, awsData, ServiceType, ServiceAndPrefix, "PutJobFailureResult", POST, "/", input)
  override def listActionTypes(input: avias.codepipeline.models.ListActionTypesInput): F[avias.codepipeline.models.ListActionTypesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.ListActionTypesOutput, avias.codepipeline.models.ListActionTypesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListActionTypes", POST, "/", input)
  override def putThirdPartyJobSuccessResult(input: avias.codepipeline.models.PutThirdPartyJobSuccessResultInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codepipeline.models.PutThirdPartyJobSuccessResultInput](client, awsData, ServiceType, ServiceAndPrefix, "PutThirdPartyJobSuccessResult", POST, "/", input)
  override def pollForJobs(input: avias.codepipeline.models.PollForJobsInput): F[avias.codepipeline.models.PollForJobsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.PollForJobsOutput, avias.codepipeline.models.PollForJobsInput](client, awsData, ServiceType, ServiceAndPrefix, "PollForJobs", POST, "/", input)
  override def acknowledgeThirdPartyJob(input: avias.codepipeline.models.AcknowledgeThirdPartyJobInput): F[avias.codepipeline.models.AcknowledgeThirdPartyJobOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.AcknowledgeThirdPartyJobOutput, avias.codepipeline.models.AcknowledgeThirdPartyJobInput](client, awsData, ServiceType, ServiceAndPrefix, "AcknowledgeThirdPartyJob", POST, "/", input)
  override def deleteCustomActionType(input: avias.codepipeline.models.DeleteCustomActionTypeInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codepipeline.models.DeleteCustomActionTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteCustomActionType", POST, "/", input)
  override def putThirdPartyJobFailureResult(input: avias.codepipeline.models.PutThirdPartyJobFailureResultInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codepipeline.models.PutThirdPartyJobFailureResultInput](client, awsData, ServiceType, ServiceAndPrefix, "PutThirdPartyJobFailureResult", POST, "/", input)
  override def listPipelines(input: avias.codepipeline.models.ListPipelinesInput): F[avias.codepipeline.models.ListPipelinesOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.ListPipelinesOutput, avias.codepipeline.models.ListPipelinesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListPipelines", POST, "/", input)
  override def startPipelineExecution(input: avias.codepipeline.models.StartPipelineExecutionInput): F[avias.codepipeline.models.StartPipelineExecutionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.StartPipelineExecutionOutput, avias.codepipeline.models.StartPipelineExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "StartPipelineExecution", POST, "/", input)
  override def getThirdPartyJobDetails(input: avias.codepipeline.models.GetThirdPartyJobDetailsInput): F[avias.codepipeline.models.GetThirdPartyJobDetailsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.GetThirdPartyJobDetailsOutput, avias.codepipeline.models.GetThirdPartyJobDetailsInput](client, awsData, ServiceType, ServiceAndPrefix, "GetThirdPartyJobDetails", POST, "/", input)
  override def deletePipeline(input: avias.codepipeline.models.DeletePipelineInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codepipeline.models.DeletePipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "DeletePipeline", POST, "/", input)
  override def enableStageTransition(input: avias.codepipeline.models.EnableStageTransitionInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codepipeline.models.EnableStageTransitionInput](client, awsData, ServiceType, ServiceAndPrefix, "EnableStageTransition", POST, "/", input)
  override def createPipeline(input: avias.codepipeline.models.CreatePipelineInput): F[avias.codepipeline.models.CreatePipelineOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.CreatePipelineOutput, avias.codepipeline.models.CreatePipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "CreatePipeline", POST, "/", input)
  override def getPipeline(input: avias.codepipeline.models.GetPipelineInput): F[avias.codepipeline.models.GetPipelineOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.GetPipelineOutput, avias.codepipeline.models.GetPipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "GetPipeline", POST, "/", input)
  override def pollForThirdPartyJobs(input: avias.codepipeline.models.PollForThirdPartyJobsInput): F[avias.codepipeline.models.PollForThirdPartyJobsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.PollForThirdPartyJobsOutput, avias.codepipeline.models.PollForThirdPartyJobsInput](client, awsData, ServiceType, ServiceAndPrefix, "PollForThirdPartyJobs", POST, "/", input)
  override def getPipelineExecution(input: avias.codepipeline.models.GetPipelineExecutionInput): F[avias.codepipeline.models.GetPipelineExecutionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.GetPipelineExecutionOutput, avias.codepipeline.models.GetPipelineExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "GetPipelineExecution", POST, "/", input)
  override def updatePipeline(input: avias.codepipeline.models.UpdatePipelineInput): F[avias.codepipeline.models.UpdatePipelineOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.UpdatePipelineOutput, avias.codepipeline.models.UpdatePipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdatePipeline", POST, "/", input)
  override def retryStageExecution(input: avias.codepipeline.models.RetryStageExecutionInput): F[avias.codepipeline.models.RetryStageExecutionOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.RetryStageExecutionOutput, avias.codepipeline.models.RetryStageExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "RetryStageExecution", POST, "/", input)
  override def getJobDetails(input: avias.codepipeline.models.GetJobDetailsInput): F[avias.codepipeline.models.GetJobDetailsOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.GetJobDetailsOutput, avias.codepipeline.models.GetJobDetailsInput](client, awsData, ServiceType, ServiceAndPrefix, "GetJobDetails", POST, "/", input)
  override def disableStageTransition(input: avias.codepipeline.models.DisableStageTransitionInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codepipeline.models.DisableStageTransitionInput](client, awsData, ServiceType, ServiceAndPrefix, "DisableStageTransition", POST, "/", input)
  override def getPipelineState(input: avias.codepipeline.models.GetPipelineStateInput): F[avias.codepipeline.models.GetPipelineStateOutput] = avias.common.http4s.ClientUtils.doRequest[F, avias.codepipeline.models.GetPipelineStateOutput, avias.codepipeline.models.GetPipelineStateInput](client, awsData, ServiceType, ServiceAndPrefix, "GetPipelineState", POST, "/", input)
  override def putJobSuccessResult(input: avias.codepipeline.models.PutJobSuccessResultInput): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.codepipeline.models.PutJobSuccessResultInput](client, awsData, ServiceType, ServiceAndPrefix, "PutJobSuccessResult", POST, "/", input)
}