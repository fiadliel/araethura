package avias.rekognition.http4s
import org.http4s.Method._
import avias.rekognition.circe._
import avias.rekognition.models
import avias.common.http4s.ClientUtils._
class AmazonrekognitionClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.rekognition.Amazonrekognition[F] {
  private[this] final val ServiceType: String = "rekognition"
  private[this] final val ServiceAndPrefix: Option[String] = Some("RekognitionService")
  override def detectFaces(input: avias.rekognition.models.DetectFacesRequest): F[avias.rekognition.models.DetectFacesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.DetectFacesResponse, avias.rekognition.models.DetectFacesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DetectFaces", POST, "/", input)
  override def indexFaces(input: avias.rekognition.models.IndexFacesRequest): F[avias.rekognition.models.IndexFacesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.IndexFacesResponse, avias.rekognition.models.IndexFacesRequest](client, awsData, ServiceType, ServiceAndPrefix, "IndexFaces", POST, "/", input)
  override def searchFaces(input: avias.rekognition.models.SearchFacesRequest): F[avias.rekognition.models.SearchFacesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.SearchFacesResponse, avias.rekognition.models.SearchFacesRequest](client, awsData, ServiceType, ServiceAndPrefix, "SearchFaces", POST, "/", input)
  override def recognizeCelebrities(input: avias.rekognition.models.RecognizeCelebritiesRequest): F[avias.rekognition.models.RecognizeCelebritiesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.RecognizeCelebritiesResponse, avias.rekognition.models.RecognizeCelebritiesRequest](client, awsData, ServiceType, ServiceAndPrefix, "RecognizeCelebrities", POST, "/", input)
  override def detectLabels(input: avias.rekognition.models.DetectLabelsRequest): F[avias.rekognition.models.DetectLabelsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.DetectLabelsResponse, avias.rekognition.models.DetectLabelsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DetectLabels", POST, "/", input)
  override def deleteFaces(input: avias.rekognition.models.DeleteFacesRequest): F[avias.rekognition.models.DeleteFacesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.DeleteFacesResponse, avias.rekognition.models.DeleteFacesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteFaces", POST, "/", input)
  override def deleteCollection(input: avias.rekognition.models.DeleteCollectionRequest): F[avias.rekognition.models.DeleteCollectionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.DeleteCollectionResponse, avias.rekognition.models.DeleteCollectionRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteCollection", POST, "/", input)
  override def listCollections(input: avias.rekognition.models.ListCollectionsRequest): F[avias.rekognition.models.ListCollectionsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.ListCollectionsResponse, avias.rekognition.models.ListCollectionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListCollections", POST, "/", input)
  override def getCelebrityInfo(input: avias.rekognition.models.GetCelebrityInfoRequest): F[avias.rekognition.models.GetCelebrityInfoResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.GetCelebrityInfoResponse, avias.rekognition.models.GetCelebrityInfoRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetCelebrityInfo", POST, "/", input)
  override def detectModerationLabels(input: avias.rekognition.models.DetectModerationLabelsRequest): F[avias.rekognition.models.DetectModerationLabelsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.DetectModerationLabelsResponse, avias.rekognition.models.DetectModerationLabelsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DetectModerationLabels", POST, "/", input)
  override def compareFaces(input: avias.rekognition.models.CompareFacesRequest): F[avias.rekognition.models.CompareFacesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.CompareFacesResponse, avias.rekognition.models.CompareFacesRequest](client, awsData, ServiceType, ServiceAndPrefix, "CompareFaces", POST, "/", input)
  override def listFaces(input: avias.rekognition.models.ListFacesRequest): F[avias.rekognition.models.ListFacesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.ListFacesResponse, avias.rekognition.models.ListFacesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListFaces", POST, "/", input)
  override def searchFacesByImage(input: avias.rekognition.models.SearchFacesByImageRequest): F[avias.rekognition.models.SearchFacesByImageResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.SearchFacesByImageResponse, avias.rekognition.models.SearchFacesByImageRequest](client, awsData, ServiceType, ServiceAndPrefix, "SearchFacesByImage", POST, "/", input)
  override def createCollection(input: avias.rekognition.models.CreateCollectionRequest): F[avias.rekognition.models.CreateCollectionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.rekognition.models.CreateCollectionResponse, avias.rekognition.models.CreateCollectionRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateCollection", POST, "/", input)
}