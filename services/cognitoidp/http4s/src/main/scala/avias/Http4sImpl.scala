package avias.cognitoidp.http4s
import org.http4s.Method._
import avias.cognitoidp.circe._
import avias.cognitoidp.models
import avias.common.http4s.ClientUtils._
class AmazoncognitoidpClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.cognitoidp.Amazoncognitoidp[F] {
  private[this] final val ServiceType: String = "cognito-idp"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AWSCognitoIdentityProviderService")
  override def listResourceServers(input: avias.cognitoidp.models.ListResourceServersRequest): F[avias.cognitoidp.models.ListResourceServersResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ListResourceServersResponse, avias.cognitoidp.models.ListResourceServersRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListResourceServers", POST, "/", input)
  override def listUserImportJobs(input: avias.cognitoidp.models.ListUserImportJobsRequest): F[avias.cognitoidp.models.ListUserImportJobsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ListUserImportJobsResponse, avias.cognitoidp.models.ListUserImportJobsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUserImportJobs", POST, "/", input)
  override def adminUserGlobalSignOut(input: avias.cognitoidp.models.AdminUserGlobalSignOutRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminUserGlobalSignOutRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminUserGlobalSignOut", POST, "/", input)
  override def adminEnableUser(input: avias.cognitoidp.models.AdminEnableUserRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminEnableUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminEnableUser", POST, "/", input)
  override def adminGetDevice(input: avias.cognitoidp.models.AdminGetDeviceRequest): F[avias.cognitoidp.models.AdminGetDeviceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.AdminGetDeviceResponse, avias.cognitoidp.models.AdminGetDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminGetDevice", POST, "/", input)
  override def changePassword(input: avias.cognitoidp.models.ChangePasswordRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.ChangePasswordRequest](client, awsData, ServiceType, ServiceAndPrefix, "ChangePassword", POST, "/", input)
  override def getDevice(input: avias.cognitoidp.models.GetDeviceRequest): F[avias.cognitoidp.models.GetDeviceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.GetDeviceResponse, avias.cognitoidp.models.GetDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDevice", POST, "/", input)
  override def adminListDevices(input: avias.cognitoidp.models.AdminListDevicesRequest): F[avias.cognitoidp.models.AdminListDevicesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.AdminListDevicesResponse, avias.cognitoidp.models.AdminListDevicesRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminListDevices", POST, "/", input)
  override def adminSetUserSettings(input: avias.cognitoidp.models.AdminSetUserSettingsRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminSetUserSettingsRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminSetUserSettings", POST, "/", input)
  override def createUserImportJob(input: avias.cognitoidp.models.CreateUserImportJobRequest): F[avias.cognitoidp.models.CreateUserImportJobResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.CreateUserImportJobResponse, avias.cognitoidp.models.CreateUserImportJobRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateUserImportJob", POST, "/", input)
  override def getUserAttributeVerificationCode(input: avias.cognitoidp.models.GetUserAttributeVerificationCodeRequest): F[avias.cognitoidp.models.GetUserAttributeVerificationCodeResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.GetUserAttributeVerificationCodeResponse, avias.cognitoidp.models.GetUserAttributeVerificationCodeRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetUserAttributeVerificationCode", POST, "/", input)
  override def initiateAuth(input: avias.cognitoidp.models.InitiateAuthRequest): F[avias.cognitoidp.models.InitiateAuthResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.InitiateAuthResponse, avias.cognitoidp.models.InitiateAuthRequest](client, awsData, ServiceType, ServiceAndPrefix, "InitiateAuth", POST, "/", input)
  override def getUser(input: avias.cognitoidp.models.GetUserRequest): F[avias.cognitoidp.models.GetUserResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.GetUserResponse, avias.cognitoidp.models.GetUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetUser", POST, "/", input)
  override def adminRespondToAuthChallenge(input: avias.cognitoidp.models.AdminRespondToAuthChallengeRequest): F[avias.cognitoidp.models.AdminRespondToAuthChallengeResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.AdminRespondToAuthChallengeResponse, avias.cognitoidp.models.AdminRespondToAuthChallengeRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminRespondToAuthChallenge", POST, "/", input)
  override def updateUserPool(input: avias.cognitoidp.models.UpdateUserPoolRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.UpdateUserPoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateUserPool", POST, "/", input)
  override def listUserPools(input: avias.cognitoidp.models.ListUserPoolsRequest): F[avias.cognitoidp.models.ListUserPoolsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ListUserPoolsResponse, avias.cognitoidp.models.ListUserPoolsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUserPools", POST, "/", input)
  override def deleteUser(input: avias.cognitoidp.models.DeleteUserRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.DeleteUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUser", POST, "/", input)
  override def adminUpdateDeviceStatus(input: avias.cognitoidp.models.AdminUpdateDeviceStatusRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminUpdateDeviceStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminUpdateDeviceStatus", POST, "/", input)
  override def getUICustomization(input: avias.cognitoidp.models.GetUICustomizationRequest): F[avias.cognitoidp.models.GetUICustomizationResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.GetUICustomizationResponse, avias.cognitoidp.models.GetUICustomizationRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetUICustomization", POST, "/", input)
  override def respondToAuthChallenge(input: avias.cognitoidp.models.RespondToAuthChallengeRequest): F[avias.cognitoidp.models.RespondToAuthChallengeResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.RespondToAuthChallengeResponse, avias.cognitoidp.models.RespondToAuthChallengeRequest](client, awsData, ServiceType, ServiceAndPrefix, "RespondToAuthChallenge", POST, "/", input)
  override def deleteUserPoolDomain(input: avias.cognitoidp.models.DeleteUserPoolDomainRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.DeleteUserPoolDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUserPoolDomain", POST, "/", input)
  override def adminGetUser(input: avias.cognitoidp.models.AdminGetUserRequest): F[avias.cognitoidp.models.AdminGetUserResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.AdminGetUserResponse, avias.cognitoidp.models.AdminGetUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminGetUser", POST, "/", input)
  override def deleteUserPoolClient(input: avias.cognitoidp.models.DeleteUserPoolClientRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.DeleteUserPoolClientRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUserPoolClient", POST, "/", input)
  override def deleteIdentityProvider(input: avias.cognitoidp.models.DeleteIdentityProviderRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.DeleteIdentityProviderRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteIdentityProvider", POST, "/", input)
  override def deleteResourceServer(input: avias.cognitoidp.models.DeleteResourceServerRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.DeleteResourceServerRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteResourceServer", POST, "/", input)
  override def createGroup(input: avias.cognitoidp.models.CreateGroupRequest): F[avias.cognitoidp.models.CreateGroupResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.CreateGroupResponse, avias.cognitoidp.models.CreateGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateGroup", POST, "/", input)
  override def listUsersInGroup(input: avias.cognitoidp.models.ListUsersInGroupRequest): F[avias.cognitoidp.models.ListUsersInGroupResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ListUsersInGroupResponse, avias.cognitoidp.models.ListUsersInGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUsersInGroup", POST, "/", input)
  override def createUserPool(input: avias.cognitoidp.models.CreateUserPoolRequest): F[avias.cognitoidp.models.CreateUserPoolResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.CreateUserPoolResponse, avias.cognitoidp.models.CreateUserPoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateUserPool", POST, "/", input)
  override def adminDisableProviderForUser(input: avias.cognitoidp.models.AdminDisableProviderForUserRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminDisableProviderForUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminDisableProviderForUser", POST, "/", input)
  override def updateDeviceStatus(input: avias.cognitoidp.models.UpdateDeviceStatusRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.UpdateDeviceStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDeviceStatus", POST, "/", input)
  override def adminDisableUser(input: avias.cognitoidp.models.AdminDisableUserRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminDisableUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminDisableUser", POST, "/", input)
  override def addCustomAttributes(input: avias.cognitoidp.models.AddCustomAttributesRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AddCustomAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "AddCustomAttributes", POST, "/", input)
  override def adminLinkProviderForUser(input: avias.cognitoidp.models.AdminLinkProviderForUserRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminLinkProviderForUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminLinkProviderForUser", POST, "/", input)
  override def listIdentityProviders(input: avias.cognitoidp.models.ListIdentityProvidersRequest): F[avias.cognitoidp.models.ListIdentityProvidersResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ListIdentityProvidersResponse, avias.cognitoidp.models.ListIdentityProvidersRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListIdentityProviders", POST, "/", input)
  override def getIdentityProviderByIdentifier(input: avias.cognitoidp.models.GetIdentityProviderByIdentifierRequest): F[avias.cognitoidp.models.GetIdentityProviderByIdentifierResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.GetIdentityProviderByIdentifierResponse, avias.cognitoidp.models.GetIdentityProviderByIdentifierRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetIdentityProviderByIdentifier", POST, "/", input)
  override def getGroup(input: avias.cognitoidp.models.GetGroupRequest): F[avias.cognitoidp.models.GetGroupResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.GetGroupResponse, avias.cognitoidp.models.GetGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetGroup", POST, "/", input)
  override def updateUserPoolClient(input: avias.cognitoidp.models.UpdateUserPoolClientRequest): F[avias.cognitoidp.models.UpdateUserPoolClientResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.UpdateUserPoolClientResponse, avias.cognitoidp.models.UpdateUserPoolClientRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateUserPoolClient", POST, "/", input)
  override def updateUserAttributes(input: avias.cognitoidp.models.UpdateUserAttributesRequest): F[avias.cognitoidp.models.UpdateUserAttributesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.UpdateUserAttributesResponse, avias.cognitoidp.models.UpdateUserAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateUserAttributes", POST, "/", input)
  override def describeUserPoolClient(input: avias.cognitoidp.models.DescribeUserPoolClientRequest): F[avias.cognitoidp.models.DescribeUserPoolClientResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.DescribeUserPoolClientResponse, avias.cognitoidp.models.DescribeUserPoolClientRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeUserPoolClient", POST, "/", input)
  override def deleteUserAttributes(input: avias.cognitoidp.models.DeleteUserAttributesRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.DeleteUserAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUserAttributes", POST, "/", input)
  override def resendConfirmationCode(input: avias.cognitoidp.models.ResendConfirmationCodeRequest): F[avias.cognitoidp.models.ResendConfirmationCodeResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ResendConfirmationCodeResponse, avias.cognitoidp.models.ResendConfirmationCodeRequest](client, awsData, ServiceType, ServiceAndPrefix, "ResendConfirmationCode", POST, "/", input)
  override def describeUserPoolDomain(input: avias.cognitoidp.models.DescribeUserPoolDomainRequest): F[avias.cognitoidp.models.DescribeUserPoolDomainResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.DescribeUserPoolDomainResponse, avias.cognitoidp.models.DescribeUserPoolDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeUserPoolDomain", POST, "/", input)
  override def createResourceServer(input: avias.cognitoidp.models.CreateResourceServerRequest): F[avias.cognitoidp.models.CreateResourceServerResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.CreateResourceServerResponse, avias.cognitoidp.models.CreateResourceServerRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateResourceServer", POST, "/", input)
  override def describeUserImportJob(input: avias.cognitoidp.models.DescribeUserImportJobRequest): F[avias.cognitoidp.models.DescribeUserImportJobResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.DescribeUserImportJobResponse, avias.cognitoidp.models.DescribeUserImportJobRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeUserImportJob", POST, "/", input)
  override def setUICustomization(input: avias.cognitoidp.models.SetUICustomizationRequest): F[avias.cognitoidp.models.SetUICustomizationResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.SetUICustomizationResponse, avias.cognitoidp.models.SetUICustomizationRequest](client, awsData, ServiceType, ServiceAndPrefix, "SetUICustomization", POST, "/", input)
  override def describeResourceServer(input: avias.cognitoidp.models.DescribeResourceServerRequest): F[avias.cognitoidp.models.DescribeResourceServerResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.DescribeResourceServerResponse, avias.cognitoidp.models.DescribeResourceServerRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeResourceServer", POST, "/", input)
  override def listUserPoolClients(input: avias.cognitoidp.models.ListUserPoolClientsRequest): F[avias.cognitoidp.models.ListUserPoolClientsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ListUserPoolClientsResponse, avias.cognitoidp.models.ListUserPoolClientsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUserPoolClients", POST, "/", input)
  override def confirmForgotPassword(input: avias.cognitoidp.models.ConfirmForgotPasswordRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.ConfirmForgotPasswordRequest](client, awsData, ServiceType, ServiceAndPrefix, "ConfirmForgotPassword", POST, "/", input)
  override def listUsers(input: avias.cognitoidp.models.ListUsersRequest): F[avias.cognitoidp.models.ListUsersResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ListUsersResponse, avias.cognitoidp.models.ListUsersRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUsers", POST, "/", input)
  override def adminForgetDevice(input: avias.cognitoidp.models.AdminForgetDeviceRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminForgetDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminForgetDevice", POST, "/", input)
  override def updateIdentityProvider(input: avias.cognitoidp.models.UpdateIdentityProviderRequest): F[avias.cognitoidp.models.UpdateIdentityProviderResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.UpdateIdentityProviderResponse, avias.cognitoidp.models.UpdateIdentityProviderRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateIdentityProvider", POST, "/", input)
  override def listDevices(input: avias.cognitoidp.models.ListDevicesRequest): F[avias.cognitoidp.models.ListDevicesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ListDevicesResponse, avias.cognitoidp.models.ListDevicesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListDevices", POST, "/", input)
  override def updateResourceServer(input: avias.cognitoidp.models.UpdateResourceServerRequest): F[avias.cognitoidp.models.UpdateResourceServerResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.UpdateResourceServerResponse, avias.cognitoidp.models.UpdateResourceServerRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateResourceServer", POST, "/", input)
  override def adminListGroupsForUser(input: avias.cognitoidp.models.AdminListGroupsForUserRequest): F[avias.cognitoidp.models.AdminListGroupsForUserResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.AdminListGroupsForUserResponse, avias.cognitoidp.models.AdminListGroupsForUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminListGroupsForUser", POST, "/", input)
  override def startUserImportJob(input: avias.cognitoidp.models.StartUserImportJobRequest): F[avias.cognitoidp.models.StartUserImportJobResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.StartUserImportJobResponse, avias.cognitoidp.models.StartUserImportJobRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartUserImportJob", POST, "/", input)
  override def createIdentityProvider(input: avias.cognitoidp.models.CreateIdentityProviderRequest): F[avias.cognitoidp.models.CreateIdentityProviderResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.CreateIdentityProviderResponse, avias.cognitoidp.models.CreateIdentityProviderRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateIdentityProvider", POST, "/", input)
  override def forgotPassword(input: avias.cognitoidp.models.ForgotPasswordRequest): F[avias.cognitoidp.models.ForgotPasswordResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ForgotPasswordResponse, avias.cognitoidp.models.ForgotPasswordRequest](client, awsData, ServiceType, ServiceAndPrefix, "ForgotPassword", POST, "/", input)
  override def deleteUserPool(input: avias.cognitoidp.models.DeleteUserPoolRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.DeleteUserPoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUserPool", POST, "/", input)
  override def adminCreateUser(input: avias.cognitoidp.models.AdminCreateUserRequest): F[avias.cognitoidp.models.AdminCreateUserResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.AdminCreateUserResponse, avias.cognitoidp.models.AdminCreateUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminCreateUser", POST, "/", input)
  override def deleteGroup(input: avias.cognitoidp.models.DeleteGroupRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.DeleteGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteGroup", POST, "/", input)
  override def createUserPoolDomain(input: avias.cognitoidp.models.CreateUserPoolDomainRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.CreateUserPoolDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateUserPoolDomain", POST, "/", input)
  override def adminDeleteUserAttributes(input: avias.cognitoidp.models.AdminDeleteUserAttributesRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminDeleteUserAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminDeleteUserAttributes", POST, "/", input)
  override def confirmSignUp(input: avias.cognitoidp.models.ConfirmSignUpRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.ConfirmSignUpRequest](client, awsData, ServiceType, ServiceAndPrefix, "ConfirmSignUp", POST, "/", input)
  override def globalSignOut(input: avias.cognitoidp.models.GlobalSignOutRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.GlobalSignOutRequest](client, awsData, ServiceType, ServiceAndPrefix, "GlobalSignOut", POST, "/", input)
  override def adminAddUserToGroup(input: avias.cognitoidp.models.AdminAddUserToGroupRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminAddUserToGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminAddUserToGroup", POST, "/", input)
  override def adminRemoveUserFromGroup(input: avias.cognitoidp.models.AdminRemoveUserFromGroupRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminRemoveUserFromGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminRemoveUserFromGroup", POST, "/", input)
  override def confirmDevice(input: avias.cognitoidp.models.ConfirmDeviceRequest): F[avias.cognitoidp.models.ConfirmDeviceResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ConfirmDeviceResponse, avias.cognitoidp.models.ConfirmDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "ConfirmDevice", POST, "/", input)
  override def getCSVHeader(input: avias.cognitoidp.models.GetCSVHeaderRequest): F[avias.cognitoidp.models.GetCSVHeaderResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.GetCSVHeaderResponse, avias.cognitoidp.models.GetCSVHeaderRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetCSVHeader", POST, "/", input)
  override def verifyUserAttribute(input: avias.cognitoidp.models.VerifyUserAttributeRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.VerifyUserAttributeRequest](client, awsData, ServiceType, ServiceAndPrefix, "VerifyUserAttribute", POST, "/", input)
  override def adminDeleteUser(input: avias.cognitoidp.models.AdminDeleteUserRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminDeleteUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminDeleteUser", POST, "/", input)
  override def describeIdentityProvider(input: avias.cognitoidp.models.DescribeIdentityProviderRequest): F[avias.cognitoidp.models.DescribeIdentityProviderResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.DescribeIdentityProviderResponse, avias.cognitoidp.models.DescribeIdentityProviderRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeIdentityProvider", POST, "/", input)
  override def updateGroup(input: avias.cognitoidp.models.UpdateGroupRequest): F[avias.cognitoidp.models.UpdateGroupResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.UpdateGroupResponse, avias.cognitoidp.models.UpdateGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateGroup", POST, "/", input)
  override def describeUserPool(input: avias.cognitoidp.models.DescribeUserPoolRequest): F[avias.cognitoidp.models.DescribeUserPoolResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.DescribeUserPoolResponse, avias.cognitoidp.models.DescribeUserPoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeUserPool", POST, "/", input)
  override def adminUpdateUserAttributes(input: avias.cognitoidp.models.AdminUpdateUserAttributesRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminUpdateUserAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminUpdateUserAttributes", POST, "/", input)
  override def adminResetUserPassword(input: avias.cognitoidp.models.AdminResetUserPasswordRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminResetUserPasswordRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminResetUserPassword", POST, "/", input)
  override def stopUserImportJob(input: avias.cognitoidp.models.StopUserImportJobRequest): F[avias.cognitoidp.models.StopUserImportJobResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.StopUserImportJobResponse, avias.cognitoidp.models.StopUserImportJobRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopUserImportJob", POST, "/", input)
  override def adminInitiateAuth(input: avias.cognitoidp.models.AdminInitiateAuthRequest): F[avias.cognitoidp.models.AdminInitiateAuthResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.AdminInitiateAuthResponse, avias.cognitoidp.models.AdminInitiateAuthRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminInitiateAuth", POST, "/", input)
  override def adminConfirmSignUp(input: avias.cognitoidp.models.AdminConfirmSignUpRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.AdminConfirmSignUpRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminConfirmSignUp", POST, "/", input)
  override def setUserSettings(input: avias.cognitoidp.models.SetUserSettingsRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.SetUserSettingsRequest](client, awsData, ServiceType, ServiceAndPrefix, "SetUserSettings", POST, "/", input)
  override def createUserPoolClient(input: avias.cognitoidp.models.CreateUserPoolClientRequest): F[avias.cognitoidp.models.CreateUserPoolClientResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.CreateUserPoolClientResponse, avias.cognitoidp.models.CreateUserPoolClientRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateUserPoolClient", POST, "/", input)
  override def listGroups(input: avias.cognitoidp.models.ListGroupsRequest): F[avias.cognitoidp.models.ListGroupsResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.ListGroupsResponse, avias.cognitoidp.models.ListGroupsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListGroups", POST, "/", input)
  override def signUp(input: avias.cognitoidp.models.SignUpRequest): F[avias.cognitoidp.models.SignUpResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.cognitoidp.models.SignUpResponse, avias.cognitoidp.models.SignUpRequest](client, awsData, ServiceType, ServiceAndPrefix, "SignUp", POST, "/", input)
  override def forgetDevice(input: avias.cognitoidp.models.ForgetDeviceRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.cognitoidp.models.ForgetDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "ForgetDevice", POST, "/", input)
}