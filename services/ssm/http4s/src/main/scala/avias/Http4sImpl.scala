package avias.ssm.http4s
import org.http4s.Method._
import avias.ssm.circe._
import avias.ssm.models
import avias.common.http4s.ClientUtils._
class AmazonssmClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.ssm.Amazonssm[F] {
  private[this] final val ServiceType: String = "ssm"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AmazonSSM")
  override def getDeployablePatchSnapshotForInstance(input: avias.ssm.models.GetDeployablePatchSnapshotForInstanceRequest): F[avias.ssm.models.GetDeployablePatchSnapshotForInstanceResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetDeployablePatchSnapshotForInstanceResult, avias.ssm.models.GetDeployablePatchSnapshotForInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDeployablePatchSnapshotForInstance", POST, "/", input)
  override def deleteParameters(input: avias.ssm.models.DeleteParametersRequest): F[avias.ssm.models.DeleteParametersResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DeleteParametersResult, avias.ssm.models.DeleteParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteParameters", POST, "/", input)
  override def listDocuments(input: avias.ssm.models.ListDocumentsRequest): F[avias.ssm.models.ListDocumentsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListDocumentsResult, avias.ssm.models.ListDocumentsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListDocuments", POST, "/", input)
  override def listResourceDataSync(input: avias.ssm.models.ListResourceDataSyncRequest): F[avias.ssm.models.ListResourceDataSyncResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListResourceDataSyncResult, avias.ssm.models.ListResourceDataSyncRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListResourceDataSync", POST, "/", input)
  override def describeInstancePatches(input: avias.ssm.models.DescribeInstancePatchesRequest): F[avias.ssm.models.DescribeInstancePatchesResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeInstancePatchesResult, avias.ssm.models.DescribeInstancePatchesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstancePatches", POST, "/", input)
  override def describePatchBaselines(input: avias.ssm.models.DescribePatchBaselinesRequest): F[avias.ssm.models.DescribePatchBaselinesResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribePatchBaselinesResult, avias.ssm.models.DescribePatchBaselinesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribePatchBaselines", POST, "/", input)
  override def describeEffectiveInstanceAssociations(input: avias.ssm.models.DescribeEffectiveInstanceAssociationsRequest): F[avias.ssm.models.DescribeEffectiveInstanceAssociationsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeEffectiveInstanceAssociationsResult, avias.ssm.models.DescribeEffectiveInstanceAssociationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEffectiveInstanceAssociations", POST, "/", input)
  override def describeInstancePatchStatesForPatchGroup(input: avias.ssm.models.DescribeInstancePatchStatesForPatchGroupRequest): F[avias.ssm.models.DescribeInstancePatchStatesForPatchGroupResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeInstancePatchStatesForPatchGroupResult, avias.ssm.models.DescribeInstancePatchStatesForPatchGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstancePatchStatesForPatchGroup", POST, "/", input)
  override def describeMaintenanceWindowExecutions(input: avias.ssm.models.DescribeMaintenanceWindowExecutionsRequest): F[avias.ssm.models.DescribeMaintenanceWindowExecutionsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeMaintenanceWindowExecutionsResult, avias.ssm.models.DescribeMaintenanceWindowExecutionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindowExecutions", POST, "/", input)
  override def updateAssociation(input: avias.ssm.models.UpdateAssociationRequest): F[avias.ssm.models.UpdateAssociationResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.UpdateAssociationResult, avias.ssm.models.UpdateAssociationRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateAssociation", POST, "/", input)
  override def describeInstanceAssociationsStatus(input: avias.ssm.models.DescribeInstanceAssociationsStatusRequest): F[avias.ssm.models.DescribeInstanceAssociationsStatusResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeInstanceAssociationsStatusResult, avias.ssm.models.DescribeInstanceAssociationsStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstanceAssociationsStatus", POST, "/", input)
  override def describeEffectivePatchesForPatchBaseline(input: avias.ssm.models.DescribeEffectivePatchesForPatchBaselineRequest): F[avias.ssm.models.DescribeEffectivePatchesForPatchBaselineResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeEffectivePatchesForPatchBaselineResult, avias.ssm.models.DescribeEffectivePatchesForPatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEffectivePatchesForPatchBaseline", POST, "/", input)
  override def createAssociation(input: avias.ssm.models.CreateAssociationRequest): F[avias.ssm.models.CreateAssociationResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.CreateAssociationResult, avias.ssm.models.CreateAssociationRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateAssociation", POST, "/", input)
  override def createPatchBaseline(input: avias.ssm.models.CreatePatchBaselineRequest): F[avias.ssm.models.CreatePatchBaselineResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.CreatePatchBaselineResult, avias.ssm.models.CreatePatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreatePatchBaseline", POST, "/", input)
  override def createDocument(input: avias.ssm.models.CreateDocumentRequest): F[avias.ssm.models.CreateDocumentResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.CreateDocumentResult, avias.ssm.models.CreateDocumentRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDocument", POST, "/", input)
  override def registerPatchBaselineForPatchGroup(input: avias.ssm.models.RegisterPatchBaselineForPatchGroupRequest): F[avias.ssm.models.RegisterPatchBaselineForPatchGroupResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.RegisterPatchBaselineForPatchGroupResult, avias.ssm.models.RegisterPatchBaselineForPatchGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterPatchBaselineForPatchGroup", POST, "/", input)
  override def createAssociationBatch(input: avias.ssm.models.CreateAssociationBatchRequest): F[avias.ssm.models.CreateAssociationBatchResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.CreateAssociationBatchResult, avias.ssm.models.CreateAssociationBatchRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateAssociationBatch", POST, "/", input)
  override def deleteResourceDataSync(input: avias.ssm.models.DeleteResourceDataSyncRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.DeleteResourceDataSyncRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteResourceDataSync", POST, "/", input)
  override def getCommandInvocation(input: avias.ssm.models.GetCommandInvocationRequest): F[avias.ssm.models.GetCommandInvocationResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetCommandInvocationResult, avias.ssm.models.GetCommandInvocationRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetCommandInvocation", POST, "/", input)
  override def modifyDocumentPermission(input: avias.ssm.models.ModifyDocumentPermissionRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.ModifyDocumentPermissionRequest](client, awsData, ServiceType, ServiceAndPrefix, "ModifyDocumentPermission", POST, "/", input)
  override def updateMaintenanceWindowTask(input: avias.ssm.models.UpdateMaintenanceWindowTaskRequest): F[avias.ssm.models.UpdateMaintenanceWindowTaskResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.UpdateMaintenanceWindowTaskResult, avias.ssm.models.UpdateMaintenanceWindowTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateMaintenanceWindowTask", POST, "/", input)
  override def describeMaintenanceWindowExecutionTasks(input: avias.ssm.models.DescribeMaintenanceWindowExecutionTasksRequest): F[avias.ssm.models.DescribeMaintenanceWindowExecutionTasksResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeMaintenanceWindowExecutionTasksResult, avias.ssm.models.DescribeMaintenanceWindowExecutionTasksRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindowExecutionTasks", POST, "/", input)
  override def describePatchGroupState(input: avias.ssm.models.DescribePatchGroupStateRequest): F[avias.ssm.models.DescribePatchGroupStateResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribePatchGroupStateResult, avias.ssm.models.DescribePatchGroupStateRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribePatchGroupState", POST, "/", input)
  override def getMaintenanceWindowExecutionTask(input: avias.ssm.models.GetMaintenanceWindowExecutionTaskRequest): F[avias.ssm.models.GetMaintenanceWindowExecutionTaskResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetMaintenanceWindowExecutionTaskResult, avias.ssm.models.GetMaintenanceWindowExecutionTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetMaintenanceWindowExecutionTask", POST, "/", input)
  override def getParametersByPath(input: avias.ssm.models.GetParametersByPathRequest): F[avias.ssm.models.GetParametersByPathResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetParametersByPathResult, avias.ssm.models.GetParametersByPathRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetParametersByPath", POST, "/", input)
  override def registerTaskWithMaintenanceWindow(input: avias.ssm.models.RegisterTaskWithMaintenanceWindowRequest): F[avias.ssm.models.RegisterTaskWithMaintenanceWindowResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.RegisterTaskWithMaintenanceWindowResult, avias.ssm.models.RegisterTaskWithMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterTaskWithMaintenanceWindow", POST, "/", input)
  override def sendAutomationSignal(input: avias.ssm.models.SendAutomationSignalRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.SendAutomationSignalRequest](client, awsData, ServiceType, ServiceAndPrefix, "SendAutomationSignal", POST, "/", input)
  override def listDocumentVersions(input: avias.ssm.models.ListDocumentVersionsRequest): F[avias.ssm.models.ListDocumentVersionsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListDocumentVersionsResult, avias.ssm.models.ListDocumentVersionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListDocumentVersions", POST, "/", input)
  override def updateManagedInstanceRole(input: avias.ssm.models.UpdateManagedInstanceRoleRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.UpdateManagedInstanceRoleRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateManagedInstanceRole", POST, "/", input)
  override def getInventorySchema(input: avias.ssm.models.GetInventorySchemaRequest): F[avias.ssm.models.GetInventorySchemaResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetInventorySchemaResult, avias.ssm.models.GetInventorySchemaRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInventorySchema", POST, "/", input)
  override def describeMaintenanceWindows(input: avias.ssm.models.DescribeMaintenanceWindowsRequest): F[avias.ssm.models.DescribeMaintenanceWindowsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeMaintenanceWindowsResult, avias.ssm.models.DescribeMaintenanceWindowsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindows", POST, "/", input)
  override def describeAvailablePatches(input: avias.ssm.models.DescribeAvailablePatchesRequest): F[avias.ssm.models.DescribeAvailablePatchesResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeAvailablePatchesResult, avias.ssm.models.DescribeAvailablePatchesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAvailablePatches", POST, "/", input)
  override def getInventory(input: avias.ssm.models.GetInventoryRequest): F[avias.ssm.models.GetInventoryResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetInventoryResult, avias.ssm.models.GetInventoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInventory", POST, "/", input)
  override def updatePatchBaseline(input: avias.ssm.models.UpdatePatchBaselineRequest): F[avias.ssm.models.UpdatePatchBaselineResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.UpdatePatchBaselineResult, avias.ssm.models.UpdatePatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdatePatchBaseline", POST, "/", input)
  override def listTagsForResource(input: avias.ssm.models.ListTagsForResourceRequest): F[avias.ssm.models.ListTagsForResourceResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListTagsForResourceResult, avias.ssm.models.ListTagsForResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForResource", POST, "/", input)
  override def describeMaintenanceWindowExecutionTaskInvocations(input: avias.ssm.models.DescribeMaintenanceWindowExecutionTaskInvocationsRequest): F[avias.ssm.models.DescribeMaintenanceWindowExecutionTaskInvocationsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeMaintenanceWindowExecutionTaskInvocationsResult, avias.ssm.models.DescribeMaintenanceWindowExecutionTaskInvocationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindowExecutionTaskInvocations", POST, "/", input)
  override def registerDefaultPatchBaseline(input: avias.ssm.models.RegisterDefaultPatchBaselineRequest): F[avias.ssm.models.RegisterDefaultPatchBaselineResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.RegisterDefaultPatchBaselineResult, avias.ssm.models.RegisterDefaultPatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterDefaultPatchBaseline", POST, "/", input)
  override def describeParameters(input: avias.ssm.models.DescribeParametersRequest): F[avias.ssm.models.DescribeParametersResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeParametersResult, avias.ssm.models.DescribeParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeParameters", POST, "/", input)
  override def sendCommand(input: avias.ssm.models.SendCommandRequest): F[avias.ssm.models.SendCommandResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.SendCommandResult, avias.ssm.models.SendCommandRequest](client, awsData, ServiceType, ServiceAndPrefix, "SendCommand", POST, "/", input)
  override def describeMaintenanceWindowTasks(input: avias.ssm.models.DescribeMaintenanceWindowTasksRequest): F[avias.ssm.models.DescribeMaintenanceWindowTasksResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeMaintenanceWindowTasksResult, avias.ssm.models.DescribeMaintenanceWindowTasksRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindowTasks", POST, "/", input)
  override def listAssociationVersions(input: avias.ssm.models.ListAssociationVersionsRequest): F[avias.ssm.models.ListAssociationVersionsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListAssociationVersionsResult, avias.ssm.models.ListAssociationVersionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAssociationVersions", POST, "/", input)
  override def deregisterTaskFromMaintenanceWindow(input: avias.ssm.models.DeregisterTaskFromMaintenanceWindowRequest): F[avias.ssm.models.DeregisterTaskFromMaintenanceWindowResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DeregisterTaskFromMaintenanceWindowResult, avias.ssm.models.DeregisterTaskFromMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterTaskFromMaintenanceWindow", POST, "/", input)
  override def updateDocument(input: avias.ssm.models.UpdateDocumentRequest): F[avias.ssm.models.UpdateDocumentResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.UpdateDocumentResult, avias.ssm.models.UpdateDocumentRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDocument", POST, "/", input)
  override def updateAssociationStatus(input: avias.ssm.models.UpdateAssociationStatusRequest): F[avias.ssm.models.UpdateAssociationStatusResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.UpdateAssociationStatusResult, avias.ssm.models.UpdateAssociationStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateAssociationStatus", POST, "/", input)
  override def getPatchBaselineForPatchGroup(input: avias.ssm.models.GetPatchBaselineForPatchGroupRequest): F[avias.ssm.models.GetPatchBaselineForPatchGroupResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetPatchBaselineForPatchGroupResult, avias.ssm.models.GetPatchBaselineForPatchGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetPatchBaselineForPatchGroup", POST, "/", input)
  override def listInventoryEntries(input: avias.ssm.models.ListInventoryEntriesRequest): F[avias.ssm.models.ListInventoryEntriesResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListInventoryEntriesResult, avias.ssm.models.ListInventoryEntriesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListInventoryEntries", POST, "/", input)
  override def putInventory(input: avias.ssm.models.PutInventoryRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.PutInventoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutInventory", POST, "/", input)
  override def getParameterHistory(input: avias.ssm.models.GetParameterHistoryRequest): F[avias.ssm.models.GetParameterHistoryResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetParameterHistoryResult, avias.ssm.models.GetParameterHistoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetParameterHistory", POST, "/", input)
  override def listCommands(input: avias.ssm.models.ListCommandsRequest): F[avias.ssm.models.ListCommandsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListCommandsResult, avias.ssm.models.ListCommandsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListCommands", POST, "/", input)
  override def getMaintenanceWindowTask(input: avias.ssm.models.GetMaintenanceWindowTaskRequest): F[avias.ssm.models.GetMaintenanceWindowTaskResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetMaintenanceWindowTaskResult, avias.ssm.models.GetMaintenanceWindowTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetMaintenanceWindowTask", POST, "/", input)
  override def createActivation(input: avias.ssm.models.CreateActivationRequest): F[avias.ssm.models.CreateActivationResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.CreateActivationResult, avias.ssm.models.CreateActivationRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateActivation", POST, "/", input)
  override def stopAutomationExecution(input: avias.ssm.models.StopAutomationExecutionRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.StopAutomationExecutionRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopAutomationExecution", POST, "/", input)
  override def getPatchBaseline(input: avias.ssm.models.GetPatchBaselineRequest): F[avias.ssm.models.GetPatchBaselineResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetPatchBaselineResult, avias.ssm.models.GetPatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetPatchBaseline", POST, "/", input)
  override def listResourceComplianceSummaries(input: avias.ssm.models.ListResourceComplianceSummariesRequest): F[avias.ssm.models.ListResourceComplianceSummariesResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListResourceComplianceSummariesResult, avias.ssm.models.ListResourceComplianceSummariesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListResourceComplianceSummaries", POST, "/", input)
  override def addTagsToResource(input: avias.ssm.models.AddTagsToResourceRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.AddTagsToResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AddTagsToResource", POST, "/", input)
  override def deleteActivation(input: avias.ssm.models.DeleteActivationRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.DeleteActivationRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteActivation", POST, "/", input)
  override def describeInstancePatchStates(input: avias.ssm.models.DescribeInstancePatchStatesRequest): F[avias.ssm.models.DescribeInstancePatchStatesResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeInstancePatchStatesResult, avias.ssm.models.DescribeInstancePatchStatesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstancePatchStates", POST, "/", input)
  override def getAutomationExecution(input: avias.ssm.models.GetAutomationExecutionRequest): F[avias.ssm.models.GetAutomationExecutionResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetAutomationExecutionResult, avias.ssm.models.GetAutomationExecutionRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetAutomationExecution", POST, "/", input)
  override def createResourceDataSync(input: avias.ssm.models.CreateResourceDataSyncRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.CreateResourceDataSyncRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateResourceDataSync", POST, "/", input)
  override def cancelCommand(input: avias.ssm.models.CancelCommandRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.CancelCommandRequest](client, awsData, ServiceType, ServiceAndPrefix, "CancelCommand", POST, "/", input)
  override def updateMaintenanceWindow(input: avias.ssm.models.UpdateMaintenanceWindowRequest): F[avias.ssm.models.UpdateMaintenanceWindowResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.UpdateMaintenanceWindowResult, avias.ssm.models.UpdateMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateMaintenanceWindow", POST, "/", input)
  override def getMaintenanceWindowExecution(input: avias.ssm.models.GetMaintenanceWindowExecutionRequest): F[avias.ssm.models.GetMaintenanceWindowExecutionResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetMaintenanceWindowExecutionResult, avias.ssm.models.GetMaintenanceWindowExecutionRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetMaintenanceWindowExecution", POST, "/", input)
  override def getParameter(input: avias.ssm.models.GetParameterRequest): F[avias.ssm.models.GetParameterResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetParameterResult, avias.ssm.models.GetParameterRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetParameter", POST, "/", input)
  override def startAutomationExecution(input: avias.ssm.models.StartAutomationExecutionRequest): F[avias.ssm.models.StartAutomationExecutionResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.StartAutomationExecutionResult, avias.ssm.models.StartAutomationExecutionRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartAutomationExecution", POST, "/", input)
  override def createMaintenanceWindow(input: avias.ssm.models.CreateMaintenanceWindowRequest): F[avias.ssm.models.CreateMaintenanceWindowResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.CreateMaintenanceWindowResult, avias.ssm.models.CreateMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateMaintenanceWindow", POST, "/", input)
  override def describeInstanceInformation(input: avias.ssm.models.DescribeInstanceInformationRequest): F[avias.ssm.models.DescribeInstanceInformationResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeInstanceInformationResult, avias.ssm.models.DescribeInstanceInformationRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstanceInformation", POST, "/", input)
  override def putComplianceItems(input: avias.ssm.models.PutComplianceItemsRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.PutComplianceItemsRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutComplianceItems", POST, "/", input)
  override def putParameter(input: avias.ssm.models.PutParameterRequest): F[avias.ssm.models.PutParameterResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.PutParameterResult, avias.ssm.models.PutParameterRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutParameter", POST, "/", input)
  override def describeDocumentPermission(input: avias.ssm.models.DescribeDocumentPermissionRequest): F[avias.ssm.models.DescribeDocumentPermissionResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeDocumentPermissionResponse, avias.ssm.models.DescribeDocumentPermissionRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDocumentPermission", POST, "/", input)
  override def updateDocumentDefaultVersion(input: avias.ssm.models.UpdateDocumentDefaultVersionRequest): F[avias.ssm.models.UpdateDocumentDefaultVersionResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.UpdateDocumentDefaultVersionResult, avias.ssm.models.UpdateDocumentDefaultVersionRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDocumentDefaultVersion", POST, "/", input)
  override def describeDocument(input: avias.ssm.models.DescribeDocumentRequest): F[avias.ssm.models.DescribeDocumentResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeDocumentResult, avias.ssm.models.DescribeDocumentRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDocument", POST, "/", input)
  override def registerTargetWithMaintenanceWindow(input: avias.ssm.models.RegisterTargetWithMaintenanceWindowRequest): F[avias.ssm.models.RegisterTargetWithMaintenanceWindowResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.RegisterTargetWithMaintenanceWindowResult, avias.ssm.models.RegisterTargetWithMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterTargetWithMaintenanceWindow", POST, "/", input)
  override def listComplianceItems(input: avias.ssm.models.ListComplianceItemsRequest): F[avias.ssm.models.ListComplianceItemsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListComplianceItemsResult, avias.ssm.models.ListComplianceItemsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListComplianceItems", POST, "/", input)
  override def deleteDocument(input: avias.ssm.models.DeleteDocumentRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.DeleteDocumentRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDocument", POST, "/", input)
  override def deregisterManagedInstance(input: avias.ssm.models.DeregisterManagedInstanceRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.DeregisterManagedInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterManagedInstance", POST, "/", input)
  override def deregisterPatchBaselineForPatchGroup(input: avias.ssm.models.DeregisterPatchBaselineForPatchGroupRequest): F[avias.ssm.models.DeregisterPatchBaselineForPatchGroupResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DeregisterPatchBaselineForPatchGroupResult, avias.ssm.models.DeregisterPatchBaselineForPatchGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterPatchBaselineForPatchGroup", POST, "/", input)
  override def describeActivations(input: avias.ssm.models.DescribeActivationsRequest): F[avias.ssm.models.DescribeActivationsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeActivationsResult, avias.ssm.models.DescribeActivationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeActivations", POST, "/", input)
  override def getDocument(input: avias.ssm.models.GetDocumentRequest): F[avias.ssm.models.GetDocumentResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetDocumentResult, avias.ssm.models.GetDocumentRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDocument", POST, "/", input)
  override def removeTagsFromResource(input: avias.ssm.models.RemoveTagsFromResourceRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.RemoveTagsFromResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTagsFromResource", POST, "/", input)
  override def getMaintenanceWindow(input: avias.ssm.models.GetMaintenanceWindowRequest): F[avias.ssm.models.GetMaintenanceWindowResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetMaintenanceWindowResult, avias.ssm.models.GetMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetMaintenanceWindow", POST, "/", input)
  override def updateMaintenanceWindowTarget(input: avias.ssm.models.UpdateMaintenanceWindowTargetRequest): F[avias.ssm.models.UpdateMaintenanceWindowTargetResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.UpdateMaintenanceWindowTargetResult, avias.ssm.models.UpdateMaintenanceWindowTargetRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateMaintenanceWindowTarget", POST, "/", input)
  override def deleteAssociation(input: avias.ssm.models.DeleteAssociationRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.DeleteAssociationRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteAssociation", POST, "/", input)
  override def deleteMaintenanceWindow(input: avias.ssm.models.DeleteMaintenanceWindowRequest): F[avias.ssm.models.DeleteMaintenanceWindowResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DeleteMaintenanceWindowResult, avias.ssm.models.DeleteMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteMaintenanceWindow", POST, "/", input)
  override def getDefaultPatchBaseline(input: avias.ssm.models.GetDefaultPatchBaselineRequest): F[avias.ssm.models.GetDefaultPatchBaselineResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetDefaultPatchBaselineResult, avias.ssm.models.GetDefaultPatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDefaultPatchBaseline", POST, "/", input)
  override def listComplianceSummaries(input: avias.ssm.models.ListComplianceSummariesRequest): F[avias.ssm.models.ListComplianceSummariesResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListComplianceSummariesResult, avias.ssm.models.ListComplianceSummariesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListComplianceSummaries", POST, "/", input)
  override def deletePatchBaseline(input: avias.ssm.models.DeletePatchBaselineRequest): F[avias.ssm.models.DeletePatchBaselineResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DeletePatchBaselineResult, avias.ssm.models.DeletePatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeletePatchBaseline", POST, "/", input)
  override def listCommandInvocations(input: avias.ssm.models.ListCommandInvocationsRequest): F[avias.ssm.models.ListCommandInvocationsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListCommandInvocationsResult, avias.ssm.models.ListCommandInvocationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListCommandInvocations", POST, "/", input)
  override def getParameters(input: avias.ssm.models.GetParametersRequest): F[avias.ssm.models.GetParametersResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetParametersResult, avias.ssm.models.GetParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetParameters", POST, "/", input)
  override def listAssociations(input: avias.ssm.models.ListAssociationsRequest): F[avias.ssm.models.ListAssociationsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.ListAssociationsResult, avias.ssm.models.ListAssociationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAssociations", POST, "/", input)
  override def deleteParameter(input: avias.ssm.models.DeleteParameterRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.ssm.models.DeleteParameterRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteParameter", POST, "/", input)
  override def describeMaintenanceWindowTargets(input: avias.ssm.models.DescribeMaintenanceWindowTargetsRequest): F[avias.ssm.models.DescribeMaintenanceWindowTargetsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeMaintenanceWindowTargetsResult, avias.ssm.models.DescribeMaintenanceWindowTargetsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindowTargets", POST, "/", input)
  override def getMaintenanceWindowExecutionTaskInvocation(input: avias.ssm.models.GetMaintenanceWindowExecutionTaskInvocationRequest): F[avias.ssm.models.GetMaintenanceWindowExecutionTaskInvocationResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.GetMaintenanceWindowExecutionTaskInvocationResult, avias.ssm.models.GetMaintenanceWindowExecutionTaskInvocationRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetMaintenanceWindowExecutionTaskInvocation", POST, "/", input)
  override def describePatchGroups(input: avias.ssm.models.DescribePatchGroupsRequest): F[avias.ssm.models.DescribePatchGroupsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribePatchGroupsResult, avias.ssm.models.DescribePatchGroupsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribePatchGroups", POST, "/", input)
  override def deregisterTargetFromMaintenanceWindow(input: avias.ssm.models.DeregisterTargetFromMaintenanceWindowRequest): F[avias.ssm.models.DeregisterTargetFromMaintenanceWindowResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DeregisterTargetFromMaintenanceWindowResult, avias.ssm.models.DeregisterTargetFromMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterTargetFromMaintenanceWindow", POST, "/", input)
  override def describeAssociation(input: avias.ssm.models.DescribeAssociationRequest): F[avias.ssm.models.DescribeAssociationResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeAssociationResult, avias.ssm.models.DescribeAssociationRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAssociation", POST, "/", input)
  override def describeAutomationExecutions(input: avias.ssm.models.DescribeAutomationExecutionsRequest): F[avias.ssm.models.DescribeAutomationExecutionsResult] = avias.common.http4s.ClientUtils.doRequest[F, avias.ssm.models.DescribeAutomationExecutionsResult, avias.ssm.models.DescribeAutomationExecutionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAutomationExecutions", POST, "/", input)
}