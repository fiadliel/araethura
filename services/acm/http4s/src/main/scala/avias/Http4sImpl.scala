package avias.acm.http4s
import org.http4s.Method._
import avias.acm.circe._
import avias.acm.models
import avias.common.http4s.ClientUtils._
class AmazonacmClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: avias.common.AwsData[F]) extends avias.acm.Amazonacm[F] {
  private[this] final val ServiceType: String = "acm"
  private[this] final val ServiceAndPrefix: Option[String] = Some("CertificateManager")
  override def deleteCertificate(input: avias.acm.models.DeleteCertificateRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.acm.models.DeleteCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteCertificate", POST, "/", input)
  override def addTagsToCertificate(input: avias.acm.models.AddTagsToCertificateRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.acm.models.AddTagsToCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "AddTagsToCertificate", POST, "/", input)
  override def listTagsForCertificate(input: avias.acm.models.ListTagsForCertificateRequest): F[avias.acm.models.ListTagsForCertificateResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.acm.models.ListTagsForCertificateResponse, avias.acm.models.ListTagsForCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForCertificate", POST, "/", input)
  override def removeTagsFromCertificate(input: avias.acm.models.RemoveTagsFromCertificateRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.acm.models.RemoveTagsFromCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTagsFromCertificate", POST, "/", input)
  override def importCertificate(input: avias.acm.models.ImportCertificateRequest): F[avias.acm.models.ImportCertificateResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.acm.models.ImportCertificateResponse, avias.acm.models.ImportCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "ImportCertificate", POST, "/", input)
  override def listCertificates(input: avias.acm.models.ListCertificatesRequest): F[avias.acm.models.ListCertificatesResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.acm.models.ListCertificatesResponse, avias.acm.models.ListCertificatesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListCertificates", POST, "/", input)
  override def describeCertificate(input: avias.acm.models.DescribeCertificateRequest): F[avias.acm.models.DescribeCertificateResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.acm.models.DescribeCertificateResponse, avias.acm.models.DescribeCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeCertificate", POST, "/", input)
  override def getCertificate(input: avias.acm.models.GetCertificateRequest): F[avias.acm.models.GetCertificateResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.acm.models.GetCertificateResponse, avias.acm.models.GetCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetCertificate", POST, "/", input)
  override def requestCertificate(input: avias.acm.models.RequestCertificateRequest): F[avias.acm.models.RequestCertificateResponse] = avias.common.http4s.ClientUtils.doRequest[F, avias.acm.models.RequestCertificateResponse, avias.acm.models.RequestCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "RequestCertificate", POST, "/", input)
  override def resendValidationEmail(input: avias.acm.models.ResendValidationEmailRequest): F[scala.Unit] = avias.common.http4s.ClientUtils.doRequest[F, scala.Unit, avias.acm.models.ResendValidationEmailRequest](client, awsData, ServiceType, ServiceAndPrefix, "ResendValidationEmail", POST, "/", input)
}